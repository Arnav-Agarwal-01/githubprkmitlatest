{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/background.js"],"sourcesContent":["\"use client\";\nimport Image from 'next/image';\nimport { useEffect, useState } from 'react';\n\nexport default function ImageBackground() {\n  const [positions, setPositions] = useState([]);\n\n  const images = [\n    '/images/img1.jpeg',\n    '/images/img2.jpeg',\n    '/images/img3.jpeg',\n    '/images/img4.jpeg',\n    '/images/img5.jpeg',\n    '/images/img6.jpeg',\n    '/images/img7.jpeg',\n    '/images/img8.jpeg',\n    '/images/img9.jpeg',\n    '/images/img10.jpeg',\n    '/images/img11.jpeg',\n    '/images/img12.jpeg',\n    '/images/img13.jpeg',\n    '/images/img14.jpeg',\n    '/images/img15.jpeg',\n    '/images/img16.jpeg',\n    '/images/img17.jpeg',\n    '/images/img18.jpeg',\n  ];\n\n  useEffect(() => {\n    // Divide the screen into grid sections to ensure better distribution\n    const gridSize = Math.ceil(Math.sqrt(images.length));\n    const cellWidth = 100 / gridSize;\n    const cellHeight = 100 / gridSize;\n    \n    // Create positions with better distribution\n    const initialPositions = images.map((_, index) => {\n      // Calculate grid position\n      const gridX = index % gridSize;\n      const gridY = Math.floor(index / gridSize);\n      \n      // Add randomness within the grid cell\n      const top = (gridY * cellHeight) + (Math.random() * (cellHeight * 0.7));\n      const left = (gridX * cellWidth) + (Math.random() * (cellWidth * 0.7));\n      \n      return {\n        top: top,\n        left: left,\n        rotate: Math.random() * 20 - 10, // Random rotation between -10 and 10 degrees\n        scale: 0.3 + Math.random() * 0.4, // Random scale between 0.3 and 0.7\n        zIndex: Math.floor(Math.random() * 10),\n      };\n    });\n    \n    setPositions(initialPositions);\n\n    // Upward movement effect\n    const interval = setInterval(() => {\n      setPositions((prev) =>\n        prev.map((pos) => ({\n          top: (pos.top - 5 + 100) % 100, // Move up by 5% each interval\n          left: pos.left, // Keep horizontal position constant\n          rotate: pos.rotate, // Keep rotation constant\n          scale: pos.scale, // Keep scale constant\n          zIndex: pos.zIndex,\n        }))\n      );\n    }, 3000); // Faster interval for smoother movement\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"background\">\n      {images.map((src, index) => (\n        <div \n          key={index} \n          className=\"image-container\"\n          style={{\n            top: `${positions[index]?.top}%`,\n            left: `${positions[index]?.left}%`,\n            transform: `rotate(${positions[index]?.rotate}deg) scale(${positions[index]?.scale})`,\n            zIndex: positions[index]?.zIndex,\n            backgroundColor: index % 3 === 0 ? 'rgba(255, 100, 50, 0.2)' : \n                           index % 3 === 1 ? 'rgba(30, 144, 255, 0.2)' : \n                           'rgba(200, 200, 200, 0.2)',\n          }}\n        >\n          <Image\n            src={src}\n            alt={`Background ${index}`}\n            width={240}\n            height={180}\n            className=\"floating-image\"\n          />\n        </div>\n      ))}\n      <style jsx>{`\n        .background {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100vw;\n          height: 100vh;\n          overflow: hidden;\n          z-index: -1;\n          background: rgb(0, 0, 0);\n          filter: blur(1px);\n        }\n        .image-container {\n          position: absolute;\n          padding: 10px;\n          border-radius: 4px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n          transition: all 5s ease;\n          overflow: hidden;\n        }\n        .floating-image {\n          width: 100%;\n          height: auto;\n          opacity: 0.6;\n          object-fit: cover;\n          filter: blur(10px);\n        }\n      `}</style>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AACA;AACA;;;AAFA;;;;AAIe,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE7C,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,qEAAqE;YACrE,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,MAAM;YAClD,MAAM,YAAY,MAAM;YACxB,MAAM,aAAa,MAAM;YAEzB,4CAA4C;YAC5C,MAAM,mBAAmB,OAAO,GAAG;8DAAC,CAAC,GAAG;oBACtC,0BAA0B;oBAC1B,MAAM,QAAQ,QAAQ;oBACtB,MAAM,QAAQ,KAAK,KAAK,CAAC,QAAQ;oBAEjC,sCAAsC;oBACtC,MAAM,MAAM,AAAC,QAAQ,aAAe,KAAK,MAAM,KAAK,CAAC,aAAa,GAAG;oBACrE,MAAM,OAAO,AAAC,QAAQ,YAAc,KAAK,MAAM,KAAK,CAAC,YAAY,GAAG;oBAEpE,OAAO;wBACL,KAAK;wBACL,MAAM;wBACN,QAAQ,KAAK,MAAM,KAAK,KAAK;wBAC7B,OAAO,MAAM,KAAK,MAAM,KAAK;wBAC7B,QAAQ,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;oBACrC;gBACF;;YAEA,aAAa;YAEb,yBAAyB;YACzB,MAAM,WAAW;sDAAY;oBAC3B;8DAAa,CAAC,OACZ,KAAK,GAAG;sEAAC,CAAC,MAAQ,CAAC;wCACjB,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI;wCAC3B,MAAM,IAAI,IAAI;wCACd,QAAQ,IAAI,MAAM;wCAClB,OAAO,IAAI,KAAK;wCAChB,QAAQ,IAAI,MAAM;oCACpB,CAAC;;;gBAEL;qDAAG,OAAO,wCAAwC;YAElD;6CAAO,IAAM,cAAc;;QAC7B;oCAAG,EAAE;IAEL,qBACE,6LAAC;kDAAc;;YACZ,OAAO,GAAG,CAAC,CAAC,KAAK,sBAChB,6LAAC;oBAGC,OAAO;wBACL,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBAChC,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;wBAClC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE,OAAO,WAAW,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBACrF,QAAQ,SAAS,CAAC,MAAM,EAAE;wBAC1B,iBAAiB,QAAQ,MAAM,IAAI,4BACpB,QAAQ,MAAM,IAAI,4BAClB;oBACjB;8DATU;8BAWV,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,CAAC,WAAW,EAAE,OAAO;wBAC1B,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;mBAjBP;;;;;;;;;;;;;;;AAmDf;GA1HwB;KAAA"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/focus-cards.jsx"],"sourcesContent":["\"use client\";;\nimport Image from \"next/image\";\nimport React, { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport const Card = React.memo(({\n  card,\n  index,\n  hovered,\n  setHovered\n}) => (\n  <div\n    onMouseEnter={() => setHovered(index)}\n    onMouseLeave={() => setHovered(null)}\n    className={cn(\n      \"rounded-lg relative bg-gray-100 dark:bg-neutral-900 overflow-hidden h-40 md:h-64 w-full transition-all duration-300 ease-out\",\n      hovered !== null && hovered !== index && \"blur-sm scale-[0.98]\"\n    )}>\n    <Image\n      src={card.src}\n      alt={card.title}\n      fill\n      className=\"object-cover absolute inset-0\" />\n    <div\n      className={cn(\n        \"absolute inset-0 bg-black/50 flex items-end py-8 px-4 transition-opacity duration-300\",\n        hovered === index ? \"opacity-100\" : \"opacity-0\"\n      )}>\n      <div\n        className=\"text-xl md:text-2xl font-medium bg-clip-text text-transparent bg-gradient-to-b from-neutral-50 to-neutral-200\">\n        {card.title}\n      </div>\n    </div>\n  </div>\n));\n\nCard.displayName = \"Card\";\n\nexport function FocusCards({\n  cards\n}) {\n  const [hovered, setHovered] = useState(null);\n\n  return (\n    <div\n      className=\"grid grid-cols-1 md:grid-cols-4 gap-2 max-w-7xl mx-auto md:px-8 w-full\">\n      {cards.map((card, index) => (\n        <Card\n          key={card.title}\n          card={card}\n          index={index}\n          hovered={hovered}\n          setHovered={setHovered} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;AAHA;;;;;AAKO,MAAM,qBAAO,6JAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,EAC9B,IAAI,EACJ,KAAK,EACL,OAAO,EACP,UAAU,EACX,iBACC,6LAAC;QACC,cAAc,IAAM,WAAW;QAC/B,cAAc,IAAM,WAAW;QAC/B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA,YAAY,QAAQ,YAAY,SAAS;;0BAE3C,6LAAC,gIAAA,CAAA,UAAK;gBACJ,KAAK,KAAK,GAAG;gBACb,KAAK,KAAK,KAAK;gBACf,IAAI;gBACJ,WAAU;;;;;;0BACZ,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yFACA,YAAY,QAAQ,gBAAgB;0BAEtC,cAAA,6LAAC;oBACC,WAAU;8BACT,KAAK,KAAK;;;;;;;;;;;;;;;;;KAzBN;AA+Bb,KAAK,WAAW,GAAG;AAEZ,SAAS,WAAW,EACzB,KAAK,EACN;;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qBACE,6LAAC;QACC,WAAU;kBACT,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,6LAAC;gBAEC,MAAM;gBACN,OAAO;gBACP,SAAS;gBACT,YAAY;eAJP,KAAK,KAAK;;;;;;;;;;AAQzB;GAlBgB;MAAA"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}