{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/background.js"],"sourcesContent":["\"use client\";\nimport Image from 'next/image';\nimport { useEffect, useState } from 'react';\n\nexport default function ImageBackground() {\n  const [positions, setPositions] = useState([]);\n\n  const images = [\n    '/images/img1.jpeg',\n    '/images/img2.jpeg',\n    '/images/img3.jpeg',\n    '/images/img4.jpeg',\n    '/images/img5.jpeg',\n    '/images/img6.jpeg',\n    '/images/img7.jpeg',\n    '/images/img8.jpeg',\n    '/images/img9.jpeg',\n    '/images/img10.jpeg',\n    '/images/img11.jpeg',\n    '/images/img12.jpeg',\n    '/images/img13.jpeg',\n    '/images/img14.jpeg',\n    '/images/img15.jpeg',\n    '/images/img16.jpeg',\n    '/images/img17.jpeg',\n    '/images/img18.jpeg',\n  ];\n\n  useEffect(() => {\n    // Divide the screen into grid sections to ensure better distribution\n    const gridSize = Math.ceil(Math.sqrt(images.length));\n    const cellWidth = 100 / gridSize;\n    const cellHeight = 100 / gridSize;\n    \n    // Create positions with better distribution\n    const initialPositions = images.map((_, index) => {\n      // Calculate grid position\n      const gridX = index % gridSize;\n      const gridY = Math.floor(index / gridSize);\n      \n      // Add randomness within the grid cell\n      const top = (gridY * cellHeight) + (Math.random() * (cellHeight * 0.7));\n      const left = (gridX * cellWidth) + (Math.random() * (cellWidth * 0.7));\n      \n      return {\n        top: top,\n        left: left,\n        rotate: Math.random() * 20 - 10, // Random rotation between -10 and 10 degrees\n        scale: 0.3 + Math.random() * 0.4, // Random scale between 0.3 and 0.7\n        zIndex: Math.floor(Math.random() * 10),\n      };\n    });\n    \n    setPositions(initialPositions);\n\n    // Upward movement effect\n    const interval = setInterval(() => {\n      setPositions((prev) =>\n        prev.map((pos) => ({\n          top: (pos.top - 5 + 100) % 100, // Move up by 5% each interval\n          left: pos.left, // Keep horizontal position constant\n          rotate: pos.rotate, // Keep rotation constant\n          scale: pos.scale, // Keep scale constant\n          zIndex: pos.zIndex,\n        }))\n      );\n    }, 3000); // Faster interval for smoother movement\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"background\">\n      {images.map((src, index) => (\n        <div \n          key={index} \n          className=\"image-container\"\n          style={{\n            top: `${positions[index]?.top}%`,\n            left: `${positions[index]?.left}%`,\n            transform: `rotate(${positions[index]?.rotate}deg) scale(${positions[index]?.scale})`,\n            zIndex: positions[index]?.zIndex,\n            backgroundColor: index % 3 === 0 ? 'rgba(255, 100, 50, 0.2)' : \n                           index % 3 === 1 ? 'rgba(30, 144, 255, 0.2)' : \n                           'rgba(200, 200, 200, 0.2)',\n          }}\n        >\n          <Image\n            src={src}\n            alt={`Background ${index}`}\n            width={240}\n            height={180}\n            className=\"floating-image\"\n          />\n        </div>\n      ))}\n      <style jsx>{`\n        .background {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100vw;\n          height: 100vh;\n          overflow: hidden;\n          z-index: -1;\n          background: rgb(0, 0, 0);\n          filter: blur(1px);\n        }\n        .image-container {\n          position: absolute;\n          padding: 10px;\n          border-radius: 4px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n          transition: all 5s ease;\n          overflow: hidden;\n        }\n        .floating-image {\n          width: 100%;\n          height: auto;\n          opacity: 0.6;\n          object-fit: cover;\n          filter: blur(10px);\n        }\n      `}</style>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;;AAIe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE7C,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,qEAAqE;QACrE,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,MAAM;QAClD,MAAM,YAAY,MAAM;QACxB,MAAM,aAAa,MAAM;QAEzB,4CAA4C;QAC5C,MAAM,mBAAmB,OAAO,GAAG,CAAC,CAAC,GAAG;YACtC,0BAA0B;YAC1B,MAAM,QAAQ,QAAQ;YACtB,MAAM,QAAQ,KAAK,KAAK,CAAC,QAAQ;YAEjC,sCAAsC;YACtC,MAAM,MAAM,AAAC,QAAQ,aAAe,KAAK,MAAM,KAAK,CAAC,aAAa,GAAG;YACrE,MAAM,OAAO,AAAC,QAAQ,YAAc,KAAK,MAAM,KAAK,CAAC,YAAY,GAAG;YAEpE,OAAO;gBACL,KAAK;gBACL,MAAM;gBACN,QAAQ,KAAK,MAAM,KAAK,KAAK;gBAC7B,OAAO,MAAM,KAAK,MAAM,KAAK;gBAC7B,QAAQ,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACrC;QACF;QAEA,aAAa;QAEb,yBAAyB;QACzB,MAAM,WAAW,YAAY;YAC3B,aAAa,CAAC,OACZ,KAAK,GAAG,CAAC,CAAC,MAAQ,CAAC;wBACjB,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI;wBAC3B,MAAM,IAAI,IAAI;wBACd,QAAQ,IAAI,MAAM;wBAClB,OAAO,IAAI,KAAK;wBAChB,QAAQ,IAAI,MAAM;oBACpB,CAAC;QAEL,GAAG,OAAO,wCAAwC;QAElD,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,qBACE,8OAAC;kDAAc;;YACZ,OAAO,GAAG,CAAC,CAAC,KAAK,sBAChB,8OAAC;oBAGC,OAAO;wBACL,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBAChC,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;wBAClC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE,OAAO,WAAW,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBACrF,QAAQ,SAAS,CAAC,MAAM,EAAE;wBAC1B,iBAAiB,QAAQ,MAAM,IAAI,4BACpB,QAAQ,MAAM,IAAI,4BAClB;oBACjB;8DATU;8BAWV,cAAA,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,CAAC,WAAW,EAAE,OAAO;wBAC1B,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;mBAjBP;;;;;;;;;;;;;;;AAmDf"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/focus-cards.jsx"],"sourcesContent":["\"use client\";;\nimport Image from \"next/image\";\nimport React, { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport const Card = React.memo(({\n  card,\n  index,\n  hovered,\n  setHovered\n}) => (\n  <div\n    onMouseEnter={() => setHovered(index)}\n    onMouseLeave={() => setHovered(null)}\n    className={cn(\n      \"rounded-lg relative bg-gray-100 dark:bg-neutral-900 overflow-hidden h-48 md:h-72 max-h-[30rem] w-full transition-all duration-300 ease-out\",\n      hovered !== null && hovered !== index && \"blur-sm scale-[0.98]\"\n    )}>\n    <Image\n      src={card.src}\n      alt={card.title}\n      fill\n      className=\"object-cover absolute inset-0\" />\n    <div\n      className={cn(\n        \"absolute inset-0 bg-black/50 flex items-end py-8 px-4 transition-opacity duration-300\",\n        hovered === index ? \"opacity-100\" : \"opacity-0\"\n      )}>\n      <div\n        className=\"text-xl md:text-2xl font-medium bg-clip-text text-transparent bg-gradient-to-b from-neutral-50 to-neutral-200\">\n        {card.title}\n      </div>\n    </div>\n  </div>\n));\n\nCard.displayName = \"Card\";\n\nexport function FocusCards({\n  cards\n}) {\n  const [hovered, setHovered] = useState(null);\n\n  return (\n    <div\n      className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-2 max-w-7xl mx-auto md:px-8 w-full\">\n      {cards.map((card, index) => (\n        <Card\n          key={card.title}\n          card={card}\n          index={index}\n          hovered={hovered}\n          setHovered={setHovered} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAHA;;;;;;AAKO,MAAM,qBAAO,qMAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,EAC9B,IAAI,EACJ,KAAK,EACL,OAAO,EACP,UAAU,EACX,iBACC,8OAAC;QACC,cAAc,IAAM,WAAW;QAC/B,cAAc,IAAM,WAAW;QAC/B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8IACA,YAAY,QAAQ,YAAY,SAAS;;0BAE3C,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK,KAAK,GAAG;gBACb,KAAK,KAAK,KAAK;gBACf,IAAI;gBACJ,WAAU;;;;;;0BACZ,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yFACA,YAAY,QAAQ,gBAAgB;0BAEtC,cAAA,8OAAC;oBACC,WAAU;8BACT,KAAK,KAAK;;;;;;;;;;;;;;;;;AAMnB,KAAK,WAAW,GAAG;AAEZ,SAAS,WAAW,EACzB,KAAK,EACN;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qBACE,8OAAC;QACC,WAAU;kBACT,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;gBAEC,MAAM;gBACN,OAAO;gBACP,SAAS;gBACT,YAAY;eAJP,KAAK,KAAK;;;;;;;;;;AAQzB"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/logo-carousel.jsx"],"sourcesContent":["\"use client\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\"\n\nconst shuffleArray = array => {\n  const shuffled = [...array]\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    ;[shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]]\n  }\n  return shuffled\n}\n\nconst distributeLogos = (allLogos, columnCount) => {\n  const shuffled = shuffleArray(allLogos)\n  const columns = Array.from({ length: columnCount }, () => [])\n\n  shuffled.forEach((logo, index) => {\n    columns[index % columnCount].push(logo)\n  })\n\n  const maxLength = Math.max(...columns.map((col) => col.length))\n  columns.forEach((col) => {\n    while (col.length < maxLength) {\n      col.push(shuffled[Math.floor(Math.random() * shuffled.length)])\n    }\n  })\n\n  return columns\n}\n\nconst LogoColumn = React.memo(({ logos, index, currentTime }) => {\n  const cycleInterval = 2000\n  const columnDelay = index * 200\n  const adjustedTime = (currentTime + columnDelay) % (cycleInterval * logos.length)\n  const currentIndex = Math.floor(adjustedTime / cycleInterval)\n  const CurrentLogo = useMemo(() => logos[currentIndex].img, [logos, currentIndex])\n\n  return (\n    <motion.div\n      className=\"relative h-14 w-24 overflow-hidden md:h-24 md:w-48\"\n      initial={{ opacity: 0, y: 50 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{\n        delay: index * 0.1,\n        duration: 0.5,\n        ease: \"easeOut\",\n      }}>\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key={`${logos[currentIndex].id}-${currentIndex}`}\n          className=\"absolute inset-0 flex items-center justify-center\"\n          initial={{ y: \"10%\", opacity: 0, filter: \"blur(8px)\" }}\n          animate={{\n            y: \"0%\",\n            opacity: 1,\n            filter: \"blur(0px)\",\n            transition: {\n              type: \"spring\",\n              stiffness: 300,\n              damping: 20,\n              mass: 1,\n              bounce: 0.2,\n              duration: 0.5,\n            },\n          }}\n          exit={{\n            y: \"-20%\",\n            opacity: 0,\n            filter: \"blur(6px)\",\n            transition: {\n              type: \"tween\",\n              ease: \"easeIn\",\n              duration: 0.3,\n            },\n          }}>\n          <CurrentLogo\n            className=\"h-20 w-20 max-h-[80%] max-w-[80%] object-contain md:h-32 md:w-32\" />\n        </motion.div>\n      </AnimatePresence>\n    </motion.div>\n  );\n})\n\nexport function LogoCarousel({\n  columnCount = 2,\n  logos\n}) {\n  const [logoSets, setLogoSets] = useState([])\n  const [currentTime, setCurrentTime] = useState(0)\n\n  const updateTime = useCallback(() => {\n    setCurrentTime((prevTime) => prevTime + 100)\n  }, [])\n\n  useEffect(() => {\n    const intervalId = setInterval(updateTime, 100)\n    return () => clearInterval(intervalId);\n  }, [updateTime])\n\n  useEffect(() => {\n    const distributedLogos = distributeLogos(logos, columnCount)\n    setLogoSets(distributedLogos)\n  }, [logos, columnCount])\n\n  return (\n    <div className=\"flex space-x-4\">\n      {logoSets.map((logos, index) => (\n        <LogoColumn key={index} logos={logos} index={index} currentTime={currentTime} />\n      ))}\n    </div>\n  );\n}\n\nexport { LogoColumn };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/sponsor-logos.jsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\n\nexport const GoogleLogo = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 272 92\"\n    className={className}\n  >\n    <path\n      fill=\"#EA4335\"\n      d=\"M115.75 47.18c0 12.77-9.99 22.18-22.25 22.18s-22.25-9.41-22.25-22.18C71.25 34.32 81.24 25 93.5 25s22.25 9.32 22.25 22.18zm-9.74 0c0-7.98-5.79-13.44-12.51-13.44S80.99 39.2 80.99 47.18c0 7.9 5.79 13.44 12.51 13.44s12.51-5.55 12.51-13.44z\"\n    />\n    <path\n      fill=\"#FBBC05\"\n      d=\"M163.75 47.18c0 12.77-9.99 22.18-22.25 22.18s-22.25-9.41-22.25-22.18c0-12.85 9.99-22.18 22.25-22.18s22.25 9.32 22.25 22.18zm-9.74 0c0-7.98-5.79-13.44-12.51-13.44s-12.51 5.46-12.51 13.44c0 7.9 5.79 13.44 12.51 13.44s12.51-5.55 12.51-13.44z\"\n    />\n    <path\n      fill=\"#4285F4\"\n      d=\"M209.75 26.34v39.82c0 16.38-9.66 23.07-21.08 23.07-10.75 0-17.22-7.19-19.66-13.07l8.48-3.53c1.51 3.61 5.21 7.87 11.17 7.87 7.31 0 11.84-4.51 11.84-13v-3.19h-.34c-2.18 2.69-6.38 5.04-11.68 5.04-11.09 0-21.25-9.66-21.25-22.09 0-12.52 10.16-22.26 21.25-22.26 5.29 0 9.49 2.35 11.68 4.96h.34v-3.61h9.25zm-8.56 20.92c0-7.81-5.21-13.52-11.84-13.52-6.72 0-12.35 5.71-12.35 13.52 0 7.73 5.63 13.36 12.35 13.36 6.63 0 11.84-5.63 11.84-13.36z\"\n    />\n    <path fill=\"#34A853\" d=\"M225 3v65h-9.5V3h9.5z\" />\n    <path\n      fill=\"#EA4335\"\n      d=\"M262.02 54.48l7.56 5.04c-2.44 3.61-8.32 9.83-18.48 9.83-12.6 0-22.01-9.74-22.01-22.18 0-13.19 9.49-22.18 20.92-22.18 11.51 0 17.14 9.16 18.98 14.11l1.01 2.52-29.65 12.28c2.27 4.45 5.8 6.72 10.75 6.72 4.96 0 8.4-2.44 10.92-6.14zm-23.27-7.98l19.82-8.23c-1.09-2.77-4.37-4.7-8.23-4.7-4.95 0-11.84 4.37-11.59 12.93z\"\n    />\n  </svg>\n);\n\nexport const MicrosoftLogo = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 23 23\"\n    className={className}\n  >\n    <path fill=\"#f3f3f3\" d=\"M0 0h23v23H0z\" />\n    <path fill=\"#f35325\" d=\"M1 1h10v10H1z\" />\n    <path fill=\"#81bc06\" d=\"M12 1h10v10H12z\" />\n    <path fill=\"#05a6f0\" d=\"M1 12h10v10H1z\" />\n    <path fill=\"#ffba08\" d=\"M12 12h10v10H12z\" />\n  </svg>\n);\n\nexport const AmazonLogo = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 602.28 181.5\"\n    className={className}\n  >\n    <path\n      fill=\"#FF9900\"\n      d=\"M374.03 142.17c-34.99 25.8-85.73 39.56-129.47 39.56-61.27 0-116.42-22.65-158.13-60.32-3.27-2.96-.34-7 3.59-4.7 45.01 26.19 100.67 41.95 158.17 41.95 38.77 0 81.35-8.02 120.56-24.67 5.92-2.51 10.88 3.88 5.28 8.18z\"\n    />\n    <path\n      fill=\"#FF9900\"\n      d=\"M388.56 125.51c-4.46-5.72-29.57-2.7-40.88-1.36-3.43.39-3.95-2.57-.87-4.72 20.01-14.08 52.82-10.01 56.65-5.29 3.84 4.76-1 37.72-19.84 53.46-2.9 2.42-5.67 1.13-4.37-2.07 4.23-10.57 13.7-34.26 9.31-40.02z\"\n    />\n    <path\n      fill=\"#000000\"\n      d=\"M348.49 20.18v-14.22c0-2.15 1.64-3.58 3.58-3.58h63.42c2.03 0 3.66 1.46 3.66 3.58v12.2c-.03 2.04-1.74 4.7-4.76 8.92l-32.84 46.83c12.19-.28 25.09 1.52 36.16 7.7 2.5 1.39 3.17 3.43 3.36 5.44v15.21c0 2.05-2.25 4.44-4.61 3.2-19.26-10.1-44.78-11.18-66.09.06-2.17 1.14-4.44-1.18-4.44-3.23v-14.45c0-2.27.03-6.17 2.31-9.63l38.07-54.59h-33.13c-2.03 0-3.66-1.43-3.66-3.58l-.03-.86zm-207.56 73.88h-19.27c-1.84-.13-3.31-1.5-3.43-3.24l.03-98.34c0-1.96 1.65-3.52 3.67-3.52h17.97c1.85.08 3.33 1.5 3.46 3.27v12.84h.37c4.69-12.47 13.46-18.28 25.35-18.28 12.06 0 19.59 5.81 24.97 18.28 4.67-12.47 15.27-18.28 26.62-18.28 8.09 0 16.94 3.34 22.33 10.88 6.1 8.34 4.85 20.47 4.85 31.09l-.03 62.01c0 1.96-1.65 3.52-3.67 3.52h-19.25c-1.9-.13-3.41-1.64-3.41-3.52v-52.1c0-4.14.37-14.5-.54-18.42-1.42-6.61-5.69-8.47-11.22-8.47-4.62 0-9.44 3.09-11.41 8.04-1.97 4.95-1.79 13.17-1.79 18.85v52.1c0 1.96-1.65 3.52-3.67 3.52h-19.25c-1.9-.13-3.41-1.64-3.41-3.52l-.03-52.1c0-10.95 1.79-27.06-11.75-27.06-13.71 0-13.17 15.74-13.17 27.06l-.03 52.1c-.03 1.96-1.67 3.52-3.69 3.52zm322.45-89.04c-14.12 0-15.01 19.25-15.01 31.28 0 12.06-.88 37.74 14.85 37.74 14.86 0 15.61-20.69 15.61-33.29 0-8.28-.35-18.22-2.85-26.09-2.14-6.89-6.4-9.64-12.6-9.64zm-.88 89.74c-28.58 0-44.09-24.55-44.09-55.83 0-30.19 15.84-54.24 44.09-54.24 28.08 0 43.38 24.55 43.38 55.13 0 30.82-15.84 54.94-43.38 54.94zm80.25-89.74c-14.12 0-15.01 19.25-15.01 31.28 0 12.06-.88 37.74 14.85 37.74 14.86 0 15.61-20.69 15.61-33.29 0-8.28-.35-18.22-2.85-26.09-2.14-6.89-6.4-9.64-12.6-9.64zm-.88 89.74c-28.58 0-44.09-24.55-44.09-55.83 0-30.19 15.84-54.24 44.09-54.24 28.08 0 43.38 24.55 43.38 55.13 0 30.82-15.84 54.94-43.38 54.94zm-205.51-1.66h-19.2c-1.9-.13-3.41-1.64-3.41-3.52l-.03-98.34c.16-1.78 1.69-3.17 3.63-3.17h17.88c1.65.08 3.01 1.21 3.37 2.72v15.04h.37c5.4-13.56 12.97-20.02 26.28-20.02 8.65 0 17.09 3.12 22.5 11.67 5.05 7.95 5.05 21.32 5.05 30.93v62.42c-.21 1.69-1.74 3.03-3.63 3.03h-19.33c-1.73-.13-3.17-1.42-3.37-3.03v-53.89c0-10.86 1.25-26.76-12.15-26.76-4.72 0-9.07 3.15-11.22 7.95-2.72 6.09-3.09 12.15-3.09 18.8v53.39c-.03 1.96-1.69 3.52-3.67 3.52z\"\n    />\n  </svg>\n);\n\nexport const MetaLogo = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 800 800\"\n    className={className}\n  >\n    <radialGradient\n      id=\"a\"\n      cx=\"101.9\"\n      cy=\"809\"\n      r=\"1.1\"\n      gradientTransform=\"matrix(800 0 0 -800 -81386 648000)\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop offset=\"0\" stopColor=\"#09f\" />\n      <stop offset=\".6\" stopColor=\"#a033ff\" />\n      <stop offset=\".9\" stopColor=\"#ff5280\" />\n      <stop offset=\"1\" stopColor=\"#ff7061\" />\n    </radialGradient>\n    <path\n      fill=\"url(#a)\"\n      d=\"M400 0C174.7 0 0 165.1 0 388c0 116.6 47.8 217.4 125.6 287 6.5 5.8 10.5 14 10.7 22.8l2.2 71.2a32 32 0 0 0 44.9 28.3l79.4-35c6.7-3 14.3-3.5 21.4-1.6 36.5 10 75.3 15.4 115.8 15.4 225.3 0 400-165.1 400-388S625.3 0 400 0z\"\n    />\n    <path\n      fill=\"#FFF\"\n      d=\"m159.8 501.5 117.5-186.4a60 60 0 0 1 86.8-16l93.5 70.1a24 24 0 0 0 28.9-.1l126.2-95.8c16.8-12.8 38.8 7.4 27.6 25.3L522.7 484.9a60 60 0 0 1-86.8 16l-93.5-70.1a24 24 0 0 0-28.9.1l-126.2 95.8c-16.8 12.8-38.8-7.3-27.5-25.2z\"\n    />\n  </svg>\n);\n\nexport const IBMLogo = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 1000 400\"\n    className={className}\n  >\n    <path\n      fill=\"#1F70C1\"\n      d=\"M0 0v27.4h194.2V0zm222.2 0v27.4h277.9c0-10.9-8.9-27.4-27.8-27.4zm333.9 0v27.4H750V0zm222.6 0v27.4H1000V0zM55.6 55.5v27.4h138.6V55.5zm222.2 0v27.4h222.2c0-10.9-3.3-27.4-27.8-27.4zm222.2 0v27.4h222.2V55.5zm222.2 0v27.4H1000V55.5zM55.6 111v27.4h138.6V111zm222.2 0v27.4h249.9V111zm166.7 0v27.4h55.6V111zm55.5 0v27.4h166.7V111zm166.7 0v27.4H1000V111zM0 166.5v27.4h194.2v-27.4zm55.6 0v27.4h138.6v-27.4zm166.6 0v27.4h138.9v-27.4zm166.7 0v27.4h55.6v-27.4zm55.5 0v27.4h138.9v-27.4zm166.7 0v27.4h138.6v-27.4zm166.7 0v27.4H1000v-27.4zM55.6 221.9v27.4h138.6v-27.4zm166.6 0v27.4h138.9v-27.4zm166.7 0v27.4h55.6v-27.4zm55.5 0v27.4h138.9v-27.4zm166.7 0v27.4h138.6v-27.4zM55.6 277.4v27.4h138.6v-27.4zm166.6 0v27.4h194.5c0-11.5-8.4-27.4-27.8-27.4zm222.2 0v27.4h55.6v-27.4zm55.5 0v27.4h194.4c0-11.5-8.3-27.4-27.7-27.4zm222.3 0v27.4h138.6v-27.4zM0 332.9v27.4h194.2v-27.4zm222.2 0v27.4h277.9c0-10.9-8.9-27.4-27.8-27.4zm333.9 0v27.4H750v-27.4zm222.6 0v27.4H1000v-27.4z\"\n    />\n  </svg>\n);"],"names":[],"mappings":";;;;;;;;AACA;AADA;;;AAGO,MAAM,aAAa,CAAC,EAAE,SAAS,EAAE,iBACtC,8OAAC;QACC,OAAM;QACN,SAAQ;QACR,WAAW;;0BAEX,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;0BAEJ,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;0BAEJ,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;0BAEJ,8OAAC;gBAAK,MAAK;gBAAU,GAAE;;;;;;0BACvB,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;;;;;;;AAKD,MAAM,gBAAgB,CAAC,EAAE,SAAS,EAAE,iBACzC,8OAAC;QACC,OAAM;QACN,SAAQ;QACR,WAAW;;0BAEX,8OAAC;gBAAK,MAAK;gBAAU,GAAE;;;;;;0BACvB,8OAAC;gBAAK,MAAK;gBAAU,GAAE;;;;;;0BACvB,8OAAC;gBAAK,MAAK;gBAAU,GAAE;;;;;;0BACvB,8OAAC;gBAAK,MAAK;gBAAU,GAAE;;;;;;0BACvB,8OAAC;gBAAK,MAAK;gBAAU,GAAE;;;;;;;;;;;;AAIpB,MAAM,aAAa,CAAC,EAAE,SAAS,EAAE,iBACtC,8OAAC;QACC,OAAM;QACN,SAAQ;QACR,WAAW;;0BAEX,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;0BAEJ,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;0BAEJ,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;;;;;;;AAKD,MAAM,WAAW,CAAC,EAAE,SAAS,EAAE,iBACpC,8OAAC;QACC,OAAM;QACN,SAAQ;QACR,WAAW;;0BAEX,8OAAC;gBACC,IAAG;gBACH,IAAG;gBACH,IAAG;gBACH,GAAE;gBACF,mBAAkB;gBAClB,eAAc;;kCAEd,8OAAC;wBAAK,QAAO;wBAAI,WAAU;;;;;;kCAC3B,8OAAC;wBAAK,QAAO;wBAAK,WAAU;;;;;;kCAC5B,8OAAC;wBAAK,QAAO;wBAAK,WAAU;;;;;;kCAC5B,8OAAC;wBAAK,QAAO;wBAAI,WAAU;;;;;;;;;;;;0BAE7B,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;0BAEJ,8OAAC;gBACC,MAAK;gBACL,GAAE;;;;;;;;;;;;AAKD,MAAM,UAAU,CAAC,EAAE,SAAS,EAAE,iBACnC,8OAAC;QACC,OAAM;QACN,SAAQ;QACR,WAAW;kBAEX,cAAA,8OAAC;YACC,MAAK;YACL,GAAE"}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/splash-cursor.jsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef } from \"react\";\n\nfunction SplashCursor({\n  // Add whatever props you like for customization\n  SIM_RESOLUTION = 128,\n  DYE_RESOLUTION = 1440,\n  CAPTURE_RESOLUTION = 512,\n  DENSITY_DISSIPATION = 3.5,\n  VELOCITY_DISSIPATION = 2,\n  PRESSURE = 0.1,\n  PRESSURE_ITERATIONS = 20,\n  CURL = 3,\n  SPLAT_RADIUS = 0.2,\n  SPLAT_FORCE = 6000,\n  SHADING = true,\n  COLOR_UPDATE_SPEED = 10,\n  BACK_COLOR = { r: 0.5, g: 0, b: 0 },\n  TRANSPARENT = true,\n}) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    function pointerPrototype() {\n      this.id = -1;\n      this.texcoordX = 0;\n      this.texcoordY = 0;\n      this.prevTexcoordX = 0;\n      this.prevTexcoordY = 0;\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.down = false;\n      this.moved = false;\n      this.color = [0, 0, 0];\n    }\n\n    let config = {\n      SIM_RESOLUTION,\n      DYE_RESOLUTION,\n      CAPTURE_RESOLUTION,\n      DENSITY_DISSIPATION,\n      VELOCITY_DISSIPATION,\n      PRESSURE,\n      PRESSURE_ITERATIONS,\n      CURL,\n      SPLAT_RADIUS,\n      SPLAT_FORCE,\n      SHADING,\n      COLOR_UPDATE_SPEED,\n      PAUSED: false,\n      BACK_COLOR,\n      TRANSPARENT,\n    };\n\n    let pointers = [new pointerPrototype()];\n\n    const { gl, ext } = getWebGLContext(canvas);\n    if (!ext.supportLinearFiltering) {\n      config.DYE_RESOLUTION = 256;\n      config.SHADING = false;\n    }\n\n    function getWebGLContext(canvas) {\n      const params = {\n        alpha: true,\n        depth: false,\n        stencil: false,\n        antialias: false,\n        preserveDrawingBuffer: false,\n      };\n      let gl = canvas.getContext(\"webgl2\", params);\n      const isWebGL2 = !!gl;\n      if (!isWebGL2)\n        gl =\n          canvas.getContext(\"webgl\", params) ||\n          canvas.getContext(\"experimental-webgl\", params);\n      let halfFloat;\n      let supportLinearFiltering;\n      if (isWebGL2) {\n        gl.getExtension(\"EXT_color_buffer_float\");\n        supportLinearFiltering = gl.getExtension(\"OES_texture_float_linear\");\n      } else {\n        halfFloat = gl.getExtension(\"OES_texture_half_float\");\n        supportLinearFiltering = gl.getExtension(\"OES_texture_half_float_linear\");\n      }\n      gl.clearColor(0.0, 0.0, 0.0, 1.0);\n      const halfFloatTexType = isWebGL2\n        ? gl.HALF_FLOAT\n        : halfFloat && halfFloat.HALF_FLOAT_OES;\n      let formatRGBA;\n      let formatRG;\n      let formatR;\n\n      if (isWebGL2) {\n        formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\n        formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\n        formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\n      } else {\n        formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n        formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n        formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n      }\n\n      return {\n        gl,\n        ext: {\n          formatRGBA,\n          formatRG,\n          formatR,\n          halfFloatTexType,\n          supportLinearFiltering,\n        },\n      };\n    }\n\n    function getSupportedFormat(gl, internalFormat, format, type) {\n      if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n        switch (internalFormat) {\n          case gl.R16F:\n            return getSupportedFormat(gl, gl.RG16F, gl.RG, type);\n          case gl.RG16F:\n            return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\n          default:\n            return null;\n        }\n      }\n      return {\n        internalFormat,\n        format,\n      };\n    }\n\n    function supportRenderTextureFormat(gl, internalFormat, format, type) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null);\n      const fbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n      const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n      return status === gl.FRAMEBUFFER_COMPLETE;\n    }\n\n    class Material {\n      constructor(vertexShader, fragmentShaderSource) {\n        this.vertexShader = vertexShader;\n        this.fragmentShaderSource = fragmentShaderSource;\n        this.programs = [];\n        this.activeProgram = null;\n        this.uniforms = [];\n      }\n      setKeywords(keywords) {\n        let hash = 0;\n        for (let i = 0; i < keywords.length; i++) hash += hashCode(keywords[i]);\n        let program = this.programs[hash];\n        if (program == null) {\n          let fragmentShader = compileShader(gl.FRAGMENT_SHADER, this.fragmentShaderSource, keywords);\n          program = createProgram(this.vertexShader, fragmentShader);\n          this.programs[hash] = program;\n        }\n        if (program === this.activeProgram) return;\n        this.uniforms = getUniforms(program);\n        this.activeProgram = program;\n      }\n      bind() {\n        gl.useProgram(this.activeProgram);\n      }\n    }\n\n    class Program {\n      constructor(vertexShader, fragmentShader) {\n        this.uniforms = {};\n        this.program = createProgram(vertexShader, fragmentShader);\n        this.uniforms = getUniforms(this.program);\n      }\n      bind() {\n        gl.useProgram(this.program);\n      }\n    }\n\n    function createProgram(vertexShader, fragmentShader) {\n      let program = gl.createProgram();\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n        console.trace(gl.getProgramInfoLog(program));\n      return program;\n    }\n\n    function getUniforms(program) {\n      let uniforms = [];\n      let uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n      for (let i = 0; i < uniformCount; i++) {\n        let uniformName = gl.getActiveUniform(program, i).name;\n        uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n      }\n      return uniforms;\n    }\n\n    function compileShader(type, source, keywords) {\n      source = addKeywords(source, keywords);\n      const shader = gl.createShader(type);\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        console.trace(gl.getShaderInfoLog(shader));\n      return shader;\n    }\n\n    function addKeywords(source, keywords) {\n      if (!keywords) return source;\n      let keywordsString = \"\";\n      keywords.forEach((keyword) => {\n        keywordsString += \"#define \" + keyword + \"\\n\";\n      });\n      return keywordsString + source;\n    }\n\n    const baseVertexShader = compileShader(gl.VERTEX_SHADER, `\n      precision highp float;\n      attribute vec2 aPosition;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform vec2 texelSize;\n\n      void main () {\n          vUv = aPosition * 0.5 + 0.5;\n          vL = vUv - vec2(texelSize.x, 0.0);\n          vR = vUv + vec2(texelSize.x, 0.0);\n          vT = vUv + vec2(0.0, texelSize.y);\n          vB = vUv - vec2(0.0, texelSize.y);\n          gl_Position = vec4(aPosition, 0.0, 1.0);\n      }\n    `);\n\n    const copyShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n\n      void main () {\n          gl_FragColor = texture2D(uTexture, vUv);\n      }\n    `);\n\n    const clearShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float value;\n\n      void main () {\n          gl_FragColor = value * texture2D(uTexture, vUv);\n      }\n   `);\n\n    const displayShaderSource = `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    `;\n\n    const splatShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uTarget;\n      uniform float aspectRatio;\n      uniform vec3 color;\n      uniform vec2 point;\n      uniform float radius;\n\n      void main () {\n          vec2 p = vUv - point.xy;\n          p.x *= aspectRatio;\n          vec3 splat = exp(-dot(p, p) / radius) * color;\n          vec3 base = texture2D(uTarget, vUv).xyz;\n          gl_FragColor = vec4(base + splat, 1.0);\n      }\n    `);\n\n    const advectionShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uSource;\n      uniform vec2 texelSize;\n      uniform vec2 dyeTexelSize;\n      uniform float dt;\n      uniform float dissipation;\n\n      vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n          vec2 st = uv / tsize - 0.5;\n          vec2 iuv = floor(st);\n          vec2 fuv = fract(st);\n\n          vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n          vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n          vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n          vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n          return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n      }\n\n      void main () {\n          #ifdef MANUAL_FILTERING\n              vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n              vec4 result = bilerp(uSource, coord, dyeTexelSize);\n          #else\n              vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n              vec4 result = texture2D(uSource, coord);\n          #endif\n          float decay = 1.0 + dissipation * dt;\n          gl_FragColor = result / decay;\n      }\n    `, ext.supportLinearFiltering ? null : [\"MANUAL_FILTERING\"]);\n\n    const divergenceShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).x;\n          float R = texture2D(uVelocity, vR).x;\n          float T = texture2D(uVelocity, vT).y;\n          float B = texture2D(uVelocity, vB).y;\n\n          vec2 C = texture2D(uVelocity, vUv).xy;\n          if (vL.x < 0.0) { L = -C.x; }\n          if (vR.x > 1.0) { R = -C.x; }\n          if (vT.y > 1.0) { T = -C.y; }\n          if (vB.y < 0.0) { B = -C.y; }\n\n          float div = 0.5 * (R - L + T - B);\n          gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n      }\n    `);\n\n    const curlShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).y;\n          float R = texture2D(uVelocity, vR).y;\n          float T = texture2D(uVelocity, vT).x;\n          float B = texture2D(uVelocity, vB).x;\n          float vorticity = R - L - T + B;\n          gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n      }\n    `);\n\n    const vorticityShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uCurl;\n      uniform float curl;\n      uniform float dt;\n\n      void main () {\n          float L = texture2D(uCurl, vL).x;\n          float R = texture2D(uCurl, vR).x;\n          float T = texture2D(uCurl, vT).x;\n          float B = texture2D(uCurl, vB).x;\n          float C = texture2D(uCurl, vUv).x;\n\n          vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n          force /= length(force) + 0.0001;\n          force *= curl * C;\n          force.y *= -1.0;\n\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity += force * dt;\n          velocity = min(max(velocity, -1000.0), 1000.0);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n    `);\n\n    const pressureShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uDivergence;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          float C = texture2D(uPressure, vUv).x;\n          float divergence = texture2D(uDivergence, vUv).x;\n          float pressure = (L + R + B + T - divergence) * 0.25;\n          gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n      }\n    `);\n\n    const gradientSubtractShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity.xy -= vec2(R - L, T - B);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n    `);\n\n    const blit = (() => {\n      gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n      gl.bufferData(\n        gl.ARRAY_BUFFER,\n        new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]),\n        gl.STATIC_DRAW\n      );\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n      gl.bufferData(\n        gl.ELEMENT_ARRAY_BUFFER,\n        new Uint16Array([0, 1, 2, 0, 2, 3]),\n        gl.STATIC_DRAW\n      );\n      gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n      gl.enableVertexAttribArray(0);\n      return (target, clear = false) => {\n        if (target == null) {\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        } else {\n          gl.viewport(0, 0, target.width, target.height);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\n        }\n        if (clear) {\n          gl.clearColor(0.0, 0.0, 0.0, 1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n      };\n    })();\n\n    let dye, velocity, divergence, curl, pressure;\n\n    const copyProgram = new Program(baseVertexShader, copyShader);\n    const clearProgram = new Program(baseVertexShader, clearShader);\n    const splatProgram = new Program(baseVertexShader, splatShader);\n    const advectionProgram = new Program(baseVertexShader, advectionShader);\n    const divergenceProgram = new Program(baseVertexShader, divergenceShader);\n    const curlProgram = new Program(baseVertexShader, curlShader);\n    const vorticityProgram = new Program(baseVertexShader, vorticityShader);\n    const pressureProgram = new Program(baseVertexShader, pressureShader);\n    const gradienSubtractProgram = new Program(baseVertexShader, gradientSubtractShader);\n    const displayMaterial = new Material(baseVertexShader, displayShaderSource);\n\n    function initFramebuffers() {\n      let simRes = getResolution(config.SIM_RESOLUTION);\n      let dyeRes = getResolution(config.DYE_RESOLUTION);\n      const texType = ext.halfFloatTexType;\n      const rgba = ext.formatRGBA;\n      const rg = ext.formatRG;\n      const r = ext.formatR;\n      const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\n      gl.disable(gl.BLEND);\n\n      if (!dye)\n        dye = createDoubleFBO(\n          dyeRes.width,\n          dyeRes.height,\n          rgba.internalFormat,\n          rgba.format,\n          texType,\n          filtering\n        );\n      else\n        dye = resizeDoubleFBO(\n          dye,\n          dyeRes.width,\n          dyeRes.height,\n          rgba.internalFormat,\n          rgba.format,\n          texType,\n          filtering\n        );\n\n      if (!velocity)\n        velocity = createDoubleFBO(\n          simRes.width,\n          simRes.height,\n          rg.internalFormat,\n          rg.format,\n          texType,\n          filtering\n        );\n      else\n        velocity = resizeDoubleFBO(\n          velocity,\n          simRes.width,\n          simRes.height,\n          rg.internalFormat,\n          rg.format,\n          texType,\n          filtering\n        );\n\n      divergence = createFBO(\n        simRes.width,\n        simRes.height,\n        r.internalFormat,\n        r.format,\n        texType,\n        gl.NEAREST\n      );\n      curl = createFBO(\n        simRes.width,\n        simRes.height,\n        r.internalFormat,\n        r.format,\n        texType,\n        gl.NEAREST\n      );\n      pressure = createDoubleFBO(\n        simRes.width,\n        simRes.height,\n        r.internalFormat,\n        r.format,\n        texType,\n        gl.NEAREST\n      );\n    }\n\n    function createFBO(w, h, internalFormat, format, type, param) {\n      gl.activeTexture(gl.TEXTURE0);\n      let texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\n\n      let fbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n      gl.viewport(0, 0, w, h);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let texelSizeX = 1.0 / w;\n      let texelSizeY = 1.0 / h;\n      return {\n        texture,\n        fbo,\n        width: w,\n        height: h,\n        texelSizeX,\n        texelSizeY,\n        attach(id) {\n          gl.activeTexture(gl.TEXTURE0 + id);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          return id;\n        },\n      };\n    }\n\n    function createDoubleFBO(w, h, internalFormat, format, type, param) {\n      let fbo1 = createFBO(w, h, internalFormat, format, type, param);\n      let fbo2 = createFBO(w, h, internalFormat, format, type, param);\n      return {\n        width: w,\n        height: h,\n        texelSizeX: fbo1.texelSizeX,\n        texelSizeY: fbo1.texelSizeY,\n        get read() {\n          return fbo1;\n        },\n        set read(value) {\n          fbo1 = value;\n        },\n        get write() {\n          return fbo2;\n        },\n        set write(value) {\n          fbo2 = value;\n        },\n        swap() {\n          let temp = fbo1;\n          fbo1 = fbo2;\n          fbo2 = temp;\n        },\n      };\n    }\n\n    function resizeFBO(target, w, h, internalFormat, format, type, param) {\n      let newFBO = createFBO(w, h, internalFormat, format, type, param);\n      copyProgram.bind();\n      gl.uniform1i(copyProgram.uniforms.uTexture, target.attach(0));\n      blit(newFBO);\n      return newFBO;\n    }\n\n    function resizeDoubleFBO(\n      target,\n      w,\n      h,\n      internalFormat,\n      format,\n      type,\n      param\n    ) {\n      if (target.width === w && target.height === h) return target;\n      target.read = resizeFBO(target.read, w, h, internalFormat, format, type, param);\n      target.write = createFBO(w, h, internalFormat, format, type, param);\n      target.width = w;\n      target.height = h;\n      target.texelSizeX = 1.0 / w;\n      target.texelSizeY = 1.0 / h;\n      return target;\n    }\n\n    function updateKeywords() {\n      let displayKeywords = [];\n      if (config.SHADING) displayKeywords.push(\"SHADING\");\n      displayMaterial.setKeywords(displayKeywords);\n    }\n\n    updateKeywords();\n    initFramebuffers();\n    let lastUpdateTime = Date.now();\n    let colorUpdateTimer = 0.0;\n\n    function updateFrame() {\n      const dt = calcDeltaTime();\n      if (resizeCanvas()) initFramebuffers();\n      updateColors(dt);\n      applyInputs();\n      step(dt);\n      render(null);\n      requestAnimationFrame(updateFrame);\n    }\n\n    function calcDeltaTime() {\n      let now = Date.now();\n      let dt = (now - lastUpdateTime) / 1000;\n      dt = Math.min(dt, 0.016666);\n      lastUpdateTime = now;\n      return dt;\n    }\n\n    function resizeCanvas() {\n      let width = scaleByPixelRatio(canvas.clientWidth);\n      let height = scaleByPixelRatio(canvas.clientHeight);\n      if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n      }\n      return false;\n    }\n\n    function updateColors(dt) {\n      colorUpdateTimer += dt * config.COLOR_UPDATE_SPEED;\n      if (colorUpdateTimer >= 1) {\n        colorUpdateTimer = wrap(colorUpdateTimer, 0, 1);\n        pointers.forEach((p) => {\n          p.color = generateColor();\n        });\n      }\n    }\n\n    function applyInputs() {\n      pointers.forEach((p) => {\n        if (p.moved) {\n          p.moved = false;\n          splatPointer(p);\n        }\n      });\n    }\n\n    function step(dt) {\n      gl.disable(gl.BLEND);\n      // Curl\n      curlProgram.bind();\n      gl.uniform2f(curlProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n      gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read.attach(0));\n      blit(curl);\n\n      // Vorticity\n      vorticityProgram.bind();\n      gl.uniform2f(\n        vorticityProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(vorticityProgram.uniforms.uVelocity, velocity.read.attach(0));\n      gl.uniform1i(vorticityProgram.uniforms.uCurl, curl.attach(1));\n      gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\n      gl.uniform1f(vorticityProgram.uniforms.dt, dt);\n      blit(velocity.write);\n      velocity.swap();\n\n      // Divergence\n      divergenceProgram.bind();\n      gl.uniform2f(\n        divergenceProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(divergenceProgram.uniforms.uVelocity, velocity.read.attach(0));\n      blit(divergence);\n\n      // Clear pressure\n      clearProgram.bind();\n      gl.uniform1i(clearProgram.uniforms.uTexture, pressure.read.attach(0));\n      gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE);\n      blit(pressure.write);\n      pressure.swap();\n\n      // Pressure\n      pressureProgram.bind();\n      gl.uniform2f(\n        pressureProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(pressureProgram.uniforms.uDivergence, divergence.attach(0));\n      for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\n        gl.uniform1i(pressureProgram.uniforms.uPressure, pressure.read.attach(1));\n        blit(pressure.write);\n        pressure.swap();\n      }\n\n      // Gradient Subtract\n      gradienSubtractProgram.bind();\n      gl.uniform2f(\n        gradienSubtractProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(gradienSubtractProgram.uniforms.uPressure, pressure.read.attach(0));\n      gl.uniform1i(gradienSubtractProgram.uniforms.uVelocity, velocity.read.attach(1));\n      blit(velocity.write);\n      velocity.swap();\n\n      // Advection\n      advectionProgram.bind();\n      gl.uniform2f(\n        advectionProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      if (!ext.supportLinearFiltering)\n        gl.uniform2f(\n          advectionProgram.uniforms.dyeTexelSize,\n          velocity.texelSizeX,\n          velocity.texelSizeY\n        );\n      let velocityId = velocity.read.attach(0);\n      gl.uniform1i(advectionProgram.uniforms.uVelocity, velocityId);\n      gl.uniform1i(advectionProgram.uniforms.uSource, velocityId);\n      gl.uniform1f(advectionProgram.uniforms.dt, dt);\n      gl.uniform1f(advectionProgram.uniforms.dissipation, config.VELOCITY_DISSIPATION);\n      blit(velocity.write);\n      velocity.swap();\n\n      if (!ext.supportLinearFiltering)\n        gl.uniform2f(advectionProgram.uniforms.dyeTexelSize, dye.texelSizeX, dye.texelSizeY);\n      gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read.attach(0));\n      gl.uniform1i(advectionProgram.uniforms.uSource, dye.read.attach(1));\n      gl.uniform1f(advectionProgram.uniforms.dissipation, config.DENSITY_DISSIPATION);\n      blit(dye.write);\n      dye.swap();\n    }\n\n    function render(target) {\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.enable(gl.BLEND);\n      drawDisplay(target);\n    }\n\n    function drawDisplay(target) {\n      let width = target == null ? gl.drawingBufferWidth : target.width;\n      let height = target == null ? gl.drawingBufferHeight : target.height;\n      displayMaterial.bind();\n      if (config.SHADING)\n        gl.uniform2f(displayMaterial.uniforms.texelSize, 1.0 / width, 1.0 / height);\n      gl.uniform1i(displayMaterial.uniforms.uTexture, dye.read.attach(0));\n      blit(target);\n    }\n\n    function splatPointer(pointer) {\n      let dx = pointer.deltaX * config.SPLAT_FORCE;\n      let dy = pointer.deltaY * config.SPLAT_FORCE;\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, pointer.color);\n    }\n\n    function clickSplat(pointer) {\n      const color = generateColor();\n      color.r *= 10.0;\n      color.g *= 10.0;\n      color.b *= 10.0;\n      let dx = 10 * (Math.random() - 0.5);\n      let dy = 30 * (Math.random() - 0.5);\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, color);\n    }\n\n    function splat(x, y, dx, dy, color) {\n      splatProgram.bind();\n      gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read.attach(0));\n      gl.uniform1f(splatProgram.uniforms.aspectRatio, canvas.width / canvas.height);\n      gl.uniform2f(splatProgram.uniforms.point, x, y);\n      gl.uniform3f(splatProgram.uniforms.color, dx, dy, 0.0);\n      gl.uniform1f(splatProgram.uniforms.radius, correctRadius(config.SPLAT_RADIUS / 100.0));\n      blit(velocity.write);\n      velocity.swap();\n\n      gl.uniform1i(splatProgram.uniforms.uTarget, dye.read.attach(0));\n      gl.uniform3f(splatProgram.uniforms.color, color.r, color.g, color.b);\n      blit(dye.write);\n      dye.swap();\n    }\n\n    function correctRadius(radius) {\n      let aspectRatio = canvas.width / canvas.height;\n      if (aspectRatio > 1) radius *= aspectRatio;\n      return radius;\n    }\n\n    function updatePointerDownData(pointer, id, posX, posY) {\n      pointer.id = id;\n      pointer.down = true;\n      pointer.moved = false;\n      pointer.texcoordX = posX / canvas.width;\n      pointer.texcoordY = 1.0 - posY / canvas.height;\n      pointer.prevTexcoordX = pointer.texcoordX;\n      pointer.prevTexcoordY = pointer.texcoordY;\n      pointer.deltaX = 0;\n      pointer.deltaY = 0;\n      pointer.color = generateColor();\n    }\n\n    function updatePointerMoveData(pointer, posX, posY, color) {\n      pointer.prevTexcoordX = pointer.texcoordX;\n      pointer.prevTexcoordY = pointer.texcoordY;\n      pointer.texcoordX = posX / canvas.width;\n      pointer.texcoordY = 1.0 - posY / canvas.height;\n      pointer.deltaX = correctDeltaX(pointer.texcoordX - pointer.prevTexcoordX);\n      pointer.deltaY = correctDeltaY(pointer.texcoordY - pointer.prevTexcoordY);\n      pointer.moved =\n        Math.abs(pointer.deltaX) > 0 || Math.abs(pointer.deltaY) > 0;\n      pointer.color = color;\n    }\n\n    function updatePointerUpData(pointer) {\n      pointer.down = false;\n    }\n\n    function correctDeltaX(delta) {\n      let aspectRatio = canvas.width / canvas.height;\n      if (aspectRatio < 1) delta *= aspectRatio;\n      return delta;\n    }\n\n    function correctDeltaY(delta) {\n      let aspectRatio = canvas.width / canvas.height;\n      if (aspectRatio > 1) delta /= aspectRatio;\n      return delta;\n    }\n\n    function generateColor() {\n      let c = HSVtoRGB(Math.random(), 1.0, 1.0);\n      c.r *= 0.15;\n      c.g *= 0.15;\n      c.b *= 0.15;\n      return c;\n    }\n\n    function HSVtoRGB(h, s, v) {\n      let r, g, b, i, f, p, q, t;\n      i = Math.floor(h * 6);\n      f = h * 6 - i;\n      p = v * (1 - s);\n      q = v * (1 - f * s);\n      t = v * (1 - (1 - f) * s);\n      switch (i % 6) {\n        case 0:\n          r = v;\n          g = t;\n          b = p;\n          break;\n        case 1:\n          r = q;\n          g = v;\n          b = p;\n          break;\n        case 2:\n          r = p;\n          g = v;\n          b = t;\n          break;\n        case 3:\n          r = p;\n          g = q;\n          b = v;\n          break;\n        case 4:\n          r = t;\n          g = p;\n          b = v;\n          break;\n        case 5:\n          r = v;\n          g = p;\n          b = q;\n          break;\n        default:\n          break;\n      }\n      return { r, g, b };\n    }\n\n    function wrap(value, min, max) {\n      const range = max - min;\n      if (range === 0) return min;\n      return ((value - min) % range) + min;\n    }\n\n    function getResolution(resolution) {\n      let aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\n      if (aspectRatio < 1) aspectRatio = 1.0 / aspectRatio;\n      const min = Math.round(resolution);\n      const max = Math.round(resolution * aspectRatio);\n      if (gl.drawingBufferWidth > gl.drawingBufferHeight)\n        return { width: max, height: min };\n      else return { width: min, height: max };\n    }\n\n    function scaleByPixelRatio(input) {\n      const pixelRatio = window.devicePixelRatio || 1;\n      return Math.floor(input * pixelRatio);\n    }\n\n    function hashCode(s) {\n      if (s.length === 0) return 0;\n      let hash = 0;\n      for (let i = 0; i < s.length; i++) {\n        hash = (hash << 5) - hash + s.charCodeAt(i);\n        hash |= 0;\n      }\n      return hash;\n    }\n\n    window.addEventListener(\"mousedown\", (e) => {\n      let pointer = pointers[0];\n      let posX = scaleByPixelRatio(e.clientX);\n      let posY = scaleByPixelRatio(e.clientY);\n      updatePointerDownData(pointer, -1, posX, posY);\n      clickSplat(pointer);\n    });\n\n    document.body.addEventListener(\"mousemove\", function handleFirstMouseMove(e) {\n      let pointer = pointers[0];\n      let posX = scaleByPixelRatio(e.clientX);\n      let posY = scaleByPixelRatio(e.clientY);\n      let color = generateColor();\n      updateFrame(); // start animation loop\n      updatePointerMoveData(pointer, posX, posY, color);\n      document.body.removeEventListener(\"mousemove\", handleFirstMouseMove);\n    });\n\n    window.addEventListener(\"mousemove\", (e) => {\n      let pointer = pointers[0];\n      let posX = scaleByPixelRatio(e.clientX);\n      let posY = scaleByPixelRatio(e.clientY);\n      let color = pointer.color;\n      updatePointerMoveData(pointer, posX, posY, color);\n    });\n\n    document.body.addEventListener(\"touchstart\", function handleFirstTouchStart(e) {\n      const touches = e.targetTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        let posX = scaleByPixelRatio(touches[i].clientX);\n        let posY = scaleByPixelRatio(touches[i].clientY);\n        updateFrame(); // start animation loop\n        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\n      }\n      document.body.removeEventListener(\"touchstart\", handleFirstTouchStart);\n    });\n\n    window.addEventListener(\"touchstart\", (e) => {\n      const touches = e.targetTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        let posX = scaleByPixelRatio(touches[i].clientX);\n        let posY = scaleByPixelRatio(touches[i].clientY);\n        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\n      }\n    });\n\n    window.addEventListener(\"touchmove\", (e) => {\n      const touches = e.targetTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        let posX = scaleByPixelRatio(touches[i].clientX);\n        let posY = scaleByPixelRatio(touches[i].clientY);\n        updatePointerMoveData(pointer, posX, posY, pointer.color);\n      }\n    }, false);\n\n    window.addEventListener(\"touchend\", (e) => {\n      const touches = e.changedTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        updatePointerUpData(pointer);\n      }\n    });\n\n    updateFrame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    SIM_RESOLUTION,\n    DYE_RESOLUTION,\n    CAPTURE_RESOLUTION,\n    DENSITY_DISSIPATION,\n    VELOCITY_DISSIPATION,\n    PRESSURE,\n    PRESSURE_ITERATIONS,\n    CURL,\n    SPLAT_RADIUS,\n    SPLAT_FORCE,\n    SHADING,\n    COLOR_UPDATE_SPEED,\n    BACK_COLOR,\n    TRANSPARENT,\n  ]);\n\n  return (\n    <div className=\"fixed top-0 left-0 z-50 pointer-events-none\">\n      <canvas ref={canvasRef} id=\"fluid\" className=\"w-screen h-screen\" />\n    </div>\n  );\n}\n\nexport { SplashCursor };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}