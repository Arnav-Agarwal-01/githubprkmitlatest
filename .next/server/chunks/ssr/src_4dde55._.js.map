{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/button.jsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cn } from \"@/lib/utils\";\n\nconst Button = React.forwardRef(({ className, variant = \"default\", size = \"default\", asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n  return (\n    <Comp\n      className={cn(\n        \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n        {\n          \"bg-primary text-primary-foreground hover:bg-primary/90\": variant === \"default\",\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\": variant === \"destructive\",\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\": variant === \"outline\",\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\": variant === \"secondary\",\n          \"bg-accent text-accent-foreground hover:bg-accent/80\": variant === \"accent\",\n          \"bg-muted text-muted-foreground hover:bg-muted/80\": variant === \"muted\",\n          \"bg-transparent text-foreground hover:bg-muted\": variant === \"ghost\",\n          \"bg-transparent text-foreground underline-offset-4 hover:underline\": variant === \"link\",\n          \"h-10 px-4 py-2\": size === \"default\",\n          \"h-9 rounded-md px-3\": size === \"sm\",\n          \"h-11 rounded-md px-8\": size === \"lg\",\n          \"h-8 rounded-md px-2 text-xs\": size === \"xs\",\n        },\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nButton.displayName = \"Button\";\n\nexport { Button };"],"names":[],"mappings":";;;;AAEA;AAEA;AADA;AAHA;;;;;AAMA,MAAM,uBAAS,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,SAAS,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IAChH,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wQACA;YACE,0DAA0D,YAAY;YACtE,sEAAsE,YAAY;YAClF,kFAAkF,YAAY;YAC9F,gEAAgE,YAAY;YAC5E,uDAAuD,YAAY;YACnE,oDAAoD,YAAY;YAChE,iDAAiD,YAAY;YAC7D,qEAAqE,YAAY;YACjF,kBAAkB,SAAS;YAC3B,uBAAuB,SAAS;YAChC,wBAAwB,SAAS;YACjC,+BAA+B,SAAS;QAC1C,GACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/particle-button.jsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\"\nimport { useState, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\nimport { MousePointerClick } from \"lucide-react\";\n\nfunction SuccessParticles({\n    buttonRef\n}) {\n    const rect = buttonRef.current?.getBoundingClientRect();\n    if (!rect) return null;\n\n    const centerX = rect.left + rect.width / 2;\n    const centerY = rect.top + rect.height / 2;\n\n    return (\n        <AnimatePresence>\n            {[...Array(6)].map((_, i) => (\n                <motion.div\n                    key={i}\n                    className=\"fixed w-1 h-1 bg-black dark:bg-white rounded-full\"\n                    style={{ left: centerX, top: centerY }}\n                    initial={{\n                        scale: 0,\n                        x: 0,\n                        y: 0,\n                    }}\n                    animate={{\n                        scale: [0, 1, 0],\n                        x: [0, (i % 2 ? 1 : -1) * (Math.random() * 50 + 20)],\n                        y: [0, -Math.random() * 50 - 20],\n                    }}\n                    transition={{\n                        duration: 0.6,\n                        delay: i * 0.1,\n                        ease: \"easeOut\",\n                    }} />\n            ))}\n        </AnimatePresence>\n    );\n}\n\nfunction ParticleButton({\n    children,\n    onClick,\n    onSuccess,\n    successDuration = 1000,\n    className,\n    ...props\n}) {\n    const [showParticles, setShowParticles] = useState(false);\n    const buttonRef = useRef(null);\n\n    const handleClick = async (e) => {\n        setShowParticles(true);\n\n        // Call the onClick handler if provided\n        if (onClick) {\n            onClick(e);\n        }\n\n        setTimeout(() => {\n            setShowParticles(false);\n        }, successDuration);\n    };\n\n    return (\n        <>\n            {showParticles && <SuccessParticles buttonRef={buttonRef} />}\n            <Button\n                ref={buttonRef}\n                onClick={handleClick}\n                className={cn(\n                    \"relative text-white font-bold bg-blue-600 hover:bg-blue-700\", // Enhanced with blue background for better contrast\n                    showParticles && \"scale-95\",\n                    \"transition-transform duration-100 px-4 py-2 rounded-md\", // Added padding and rounded corners\n                    className\n                )}\n                {...props}>\n                {children}\n                <MousePointerClick className=\"h-4 w-4\" />\n            </Button>\n        </>\n    );\n}\n\nexport { ParticleButton }"],"names":[],"mappings":";;;;AACA;AAEA;AAEA;AADA;AAAA;AAEA;AANA;;;;;;;;AAQA,SAAS,iBAAiB,EACtB,SAAS,EACZ;IACG,MAAM,OAAO,UAAU,OAAO,EAAE;IAChC,IAAI,CAAC,MAAM,OAAO;IAElB,MAAM,UAAU,KAAK,IAAI,GAAG,KAAK,KAAK,GAAG;IACzC,MAAM,UAAU,KAAK,GAAG,GAAG,KAAK,MAAM,GAAG;IAEzC,qBACI,8OAAC,yLAAA,CAAA,kBAAe;kBACX;eAAI,MAAM;SAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACnB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBAEP,WAAU;gBACV,OAAO;oBAAE,MAAM;oBAAS,KAAK;gBAAQ;gBACrC,SAAS;oBACL,OAAO;oBACP,GAAG;oBACH,GAAG;gBACP;gBACA,SAAS;oBACL,OAAO;wBAAC;wBAAG;wBAAG;qBAAE;oBAChB,GAAG;wBAAC;wBAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,KAAK,KAAK,EAAE;qBAAE;oBACpD,GAAG;wBAAC;wBAAG,CAAC,KAAK,MAAM,KAAK,KAAK;qBAAG;gBACpC;gBACA,YAAY;oBACR,UAAU;oBACV,OAAO,IAAI;oBACX,MAAM;gBACV;eAjBK;;;;;;;;;;AAqBzB;AAEA,SAAS,eAAe,EACpB,QAAQ,EACR,OAAO,EACP,SAAS,EACT,kBAAkB,IAAI,EACtB,SAAS,EACT,GAAG,OACN;IACG,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEzB,MAAM,cAAc,OAAO;QACvB,iBAAiB;QAEjB,uCAAuC;QACvC,IAAI,SAAS;YACT,QAAQ;QACZ;QAEA,WAAW;YACP,iBAAiB;QACrB,GAAG;IACP;IAEA,qBACI;;YACK,+BAAiB,8OAAC;gBAAiB,WAAW;;;;;;0BAC/C,8OAAC,kIAAA,CAAA,SAAM;gBACH,KAAK;gBACL,SAAS;gBACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,+DACA,iBAAiB,YACjB,0DACA;gBAEH,GAAG,KAAK;;oBACR;kCACD,8OAAC,oOAAA,CAAA,oBAAiB;wBAAC,WAAU;;;;;;;;;;;;;;AAI7C"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/background.js"],"sourcesContent":["\"use client\";\nimport Image from 'next/image';\nimport { useEffect, useState } from 'react';\n\nexport default function ImageBackground() {\n  const [positions, setPositions] = useState([]);\n\n  const images = [\n    '/images/img1.jpeg',\n    '/images/img2.jpeg',\n    '/images/img3.jpeg',\n    '/images/img4.jpeg',\n    '/images/img5.jpeg',\n    '/images/img6.jpeg',\n    '/images/img7.jpeg',\n    '/images/img8.jpeg',\n    '/images/img9.jpeg',\n    '/images/img10.jpeg',\n    '/images/img11.jpeg',\n    '/images/img12.jpeg',\n    '/images/img13.jpeg',\n    '/images/img14.jpeg',\n    '/images/img15.jpeg',\n    '/images/img16.jpeg',\n    '/images/img17.jpeg',\n    '/images/img18.jpeg',\n  ];\n\n  useEffect(() => {\n    // Divide the screen into grid sections to ensure better distribution\n    const gridSize = Math.ceil(Math.sqrt(images.length));\n    const cellWidth = 100 / gridSize;\n    const cellHeight = 100 / gridSize;\n    \n    // Create positions with better distribution\n    const initialPositions = images.map((_, index) => {\n      // Calculate grid position\n      const gridX = index % gridSize;\n      const gridY = Math.floor(index / gridSize);\n      \n      // Add randomness within the grid cell\n      const top = (gridY * cellHeight) + (Math.random() * (cellHeight * 0.7));\n      const left = (gridX * cellWidth) + (Math.random() * (cellWidth * 0.7));\n      \n      return {\n        top: top,\n        left: left,\n        rotate: Math.random() * 20 - 10, // Random rotation between -10 and 10 degrees\n        scale: 0.3 + Math.random() * 0.4, // Random scale between 0.3 and 0.7\n        zIndex: Math.floor(Math.random() * 10),\n      };\n    });\n    \n    setPositions(initialPositions);\n\n    // Upward movement effect\n    const interval = setInterval(() => {\n      setPositions((prev) =>\n        prev.map((pos) => ({\n          top: (pos.top - 5 + 100) % 100, // Move up by 5% each interval\n          left: pos.left, // Keep horizontal position constant\n          rotate: pos.rotate, // Keep rotation constant\n          scale: pos.scale, // Keep scale constant\n          zIndex: pos.zIndex,\n        }))\n      );\n    }, 3000); // Faster interval for smoother movement\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"background\">\n      {images.map((src, index) => (\n        <div \n          key={index} \n          className=\"image-container\"\n          style={{\n            top: `${positions[index]?.top}%`,\n            left: `${positions[index]?.left}%`,\n            transform: `rotate(${positions[index]?.rotate}deg) scale(${positions[index]?.scale})`,\n            zIndex: positions[index]?.zIndex,\n            backgroundColor: index % 3 === 0 ? 'rgba(255, 100, 50, 0.2)' : \n                           index % 3 === 1 ? 'rgba(30, 144, 255, 0.2)' : \n                           'rgba(200, 200, 200, 0.2)',\n          }}\n        >\n          <Image\n            src={src}\n            alt={`Background ${index}`}\n            width={240}\n            height={180}\n            className=\"floating-image\"\n          />\n        </div>\n      ))}\n      <style jsx>{`\n        .background {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100vw;\n          height: 100vh;\n          overflow: hidden;\n          z-index: -1;\n          background: rgb(0, 0, 0);\n          filter: blur(1px);\n        }\n        .image-container {\n          position: absolute;\n          padding: 10px;\n          border-radius: 4px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n          transition: all 5s ease;\n          overflow: hidden;\n        }\n        .floating-image {\n          width: 100%;\n          height: auto;\n          opacity: 0.6;\n          object-fit: cover;\n          filter: blur(10px);\n        }\n      `}</style>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;;AAIe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE7C,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,qEAAqE;QACrE,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,MAAM;QAClD,MAAM,YAAY,MAAM;QACxB,MAAM,aAAa,MAAM;QAEzB,4CAA4C;QAC5C,MAAM,mBAAmB,OAAO,GAAG,CAAC,CAAC,GAAG;YACtC,0BAA0B;YAC1B,MAAM,QAAQ,QAAQ;YACtB,MAAM,QAAQ,KAAK,KAAK,CAAC,QAAQ;YAEjC,sCAAsC;YACtC,MAAM,MAAM,AAAC,QAAQ,aAAe,KAAK,MAAM,KAAK,CAAC,aAAa,GAAG;YACrE,MAAM,OAAO,AAAC,QAAQ,YAAc,KAAK,MAAM,KAAK,CAAC,YAAY,GAAG;YAEpE,OAAO;gBACL,KAAK;gBACL,MAAM;gBACN,QAAQ,KAAK,MAAM,KAAK,KAAK;gBAC7B,OAAO,MAAM,KAAK,MAAM,KAAK;gBAC7B,QAAQ,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACrC;QACF;QAEA,aAAa;QAEb,yBAAyB;QACzB,MAAM,WAAW,YAAY;YAC3B,aAAa,CAAC,OACZ,KAAK,GAAG,CAAC,CAAC,MAAQ,CAAC;wBACjB,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI;wBAC3B,MAAM,IAAI,IAAI;wBACd,QAAQ,IAAI,MAAM;wBAClB,OAAO,IAAI,KAAK;wBAChB,QAAQ,IAAI,MAAM;oBACpB,CAAC;QAEL,GAAG,OAAO,wCAAwC;QAElD,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,qBACE,8OAAC;kDAAc;;YACZ,OAAO,GAAG,CAAC,CAAC,KAAK,sBAChB,8OAAC;oBAGC,OAAO;wBACL,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBAChC,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;wBAClC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE,OAAO,WAAW,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBACrF,QAAQ,SAAS,CAAC,MAAM,EAAE;wBAC1B,iBAAiB,QAAQ,MAAM,IAAI,4BACpB,QAAQ,MAAM,IAAI,4BAClB;oBACjB;8DATU;8BAWV,cAAA,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,CAAC,WAAW,EAAE,OAAO;wBAC1B,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;mBAjBP;;;;;;;;;;;;;;;AAmDf"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/components/ui/splash-cursor.jsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef } from \"react\";\n\nfunction SplashCursor({\n  // Add whatever props you like for customization\n  SIM_RESOLUTION = 128,\n  DYE_RESOLUTION = 1440,\n  CAPTURE_RESOLUTION = 512,\n  DENSITY_DISSIPATION = 3.5,\n  VELOCITY_DISSIPATION = 2,\n  PRESSURE = 0.1,\n  PRESSURE_ITERATIONS = 20,\n  CURL = 3,\n  SPLAT_RADIUS = 0.2,\n  SPLAT_FORCE = 6000,\n  SHADING = true,\n  COLOR_UPDATE_SPEED = 10,\n  BACK_COLOR = { r: 0.5, g: 0, b: 0 },\n  TRANSPARENT = true,\n}) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    function pointerPrototype() {\n      this.id = -1;\n      this.texcoordX = 0;\n      this.texcoordY = 0;\n      this.prevTexcoordX = 0;\n      this.prevTexcoordY = 0;\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.down = false;\n      this.moved = false;\n      this.color = [0, 0, 0];\n    }\n\n    let config = {\n      SIM_RESOLUTION,\n      DYE_RESOLUTION,\n      CAPTURE_RESOLUTION,\n      DENSITY_DISSIPATION,\n      VELOCITY_DISSIPATION,\n      PRESSURE,\n      PRESSURE_ITERATIONS,\n      CURL,\n      SPLAT_RADIUS,\n      SPLAT_FORCE,\n      SHADING,\n      COLOR_UPDATE_SPEED,\n      PAUSED: false,\n      BACK_COLOR,\n      TRANSPARENT,\n    };\n\n    let pointers = [new pointerPrototype()];\n\n    const { gl, ext } = getWebGLContext(canvas);\n    if (!ext.supportLinearFiltering) {\n      config.DYE_RESOLUTION = 256;\n      config.SHADING = false;\n    }\n\n    function getWebGLContext(canvas) {\n      const params = {\n        alpha: true,\n        depth: false,\n        stencil: false,\n        antialias: false,\n        preserveDrawingBuffer: false,\n      };\n      let gl = canvas.getContext(\"webgl2\", params);\n      const isWebGL2 = !!gl;\n      if (!isWebGL2)\n        gl =\n          canvas.getContext(\"webgl\", params) ||\n          canvas.getContext(\"experimental-webgl\", params);\n      let halfFloat;\n      let supportLinearFiltering;\n      if (isWebGL2) {\n        gl.getExtension(\"EXT_color_buffer_float\");\n        supportLinearFiltering = gl.getExtension(\"OES_texture_float_linear\");\n      } else {\n        halfFloat = gl.getExtension(\"OES_texture_half_float\");\n        supportLinearFiltering = gl.getExtension(\"OES_texture_half_float_linear\");\n      }\n      gl.clearColor(0.0, 0.0, 0.0, 1.0);\n      const halfFloatTexType = isWebGL2\n        ? gl.HALF_FLOAT\n        : halfFloat && halfFloat.HALF_FLOAT_OES;\n      let formatRGBA;\n      let formatRG;\n      let formatR;\n\n      if (isWebGL2) {\n        formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\n        formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\n        formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\n      } else {\n        formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n        formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n        formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n      }\n\n      return {\n        gl,\n        ext: {\n          formatRGBA,\n          formatRG,\n          formatR,\n          halfFloatTexType,\n          supportLinearFiltering,\n        },\n      };\n    }\n\n    function getSupportedFormat(gl, internalFormat, format, type) {\n      if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n        switch (internalFormat) {\n          case gl.R16F:\n            return getSupportedFormat(gl, gl.RG16F, gl.RG, type);\n          case gl.RG16F:\n            return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\n          default:\n            return null;\n        }\n      }\n      return {\n        internalFormat,\n        format,\n      };\n    }\n\n    function supportRenderTextureFormat(gl, internalFormat, format, type) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null);\n      const fbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n      const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n      return status === gl.FRAMEBUFFER_COMPLETE;\n    }\n\n    class Material {\n      constructor(vertexShader, fragmentShaderSource) {\n        this.vertexShader = vertexShader;\n        this.fragmentShaderSource = fragmentShaderSource;\n        this.programs = [];\n        this.activeProgram = null;\n        this.uniforms = [];\n      }\n      setKeywords(keywords) {\n        let hash = 0;\n        for (let i = 0; i < keywords.length; i++) hash += hashCode(keywords[i]);\n        let program = this.programs[hash];\n        if (program == null) {\n          let fragmentShader = compileShader(gl.FRAGMENT_SHADER, this.fragmentShaderSource, keywords);\n          program = createProgram(this.vertexShader, fragmentShader);\n          this.programs[hash] = program;\n        }\n        if (program === this.activeProgram) return;\n        this.uniforms = getUniforms(program);\n        this.activeProgram = program;\n      }\n      bind() {\n        gl.useProgram(this.activeProgram);\n      }\n    }\n\n    class Program {\n      constructor(vertexShader, fragmentShader) {\n        this.uniforms = {};\n        this.program = createProgram(vertexShader, fragmentShader);\n        this.uniforms = getUniforms(this.program);\n      }\n      bind() {\n        gl.useProgram(this.program);\n      }\n    }\n\n    function createProgram(vertexShader, fragmentShader) {\n      let program = gl.createProgram();\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n        console.trace(gl.getProgramInfoLog(program));\n      return program;\n    }\n\n    function getUniforms(program) {\n      let uniforms = [];\n      let uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n      for (let i = 0; i < uniformCount; i++) {\n        let uniformName = gl.getActiveUniform(program, i).name;\n        uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n      }\n      return uniforms;\n    }\n\n    function compileShader(type, source, keywords) {\n      source = addKeywords(source, keywords);\n      const shader = gl.createShader(type);\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        console.trace(gl.getShaderInfoLog(shader));\n      return shader;\n    }\n\n    function addKeywords(source, keywords) {\n      if (!keywords) return source;\n      let keywordsString = \"\";\n      keywords.forEach((keyword) => {\n        keywordsString += \"#define \" + keyword + \"\\n\";\n      });\n      return keywordsString + source;\n    }\n\n    const baseVertexShader = compileShader(gl.VERTEX_SHADER, `\n      precision highp float;\n      attribute vec2 aPosition;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform vec2 texelSize;\n\n      void main () {\n          vUv = aPosition * 0.5 + 0.5;\n          vL = vUv - vec2(texelSize.x, 0.0);\n          vR = vUv + vec2(texelSize.x, 0.0);\n          vT = vUv + vec2(0.0, texelSize.y);\n          vB = vUv - vec2(0.0, texelSize.y);\n          gl_Position = vec4(aPosition, 0.0, 1.0);\n      }\n    `);\n\n    const copyShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n\n      void main () {\n          gl_FragColor = texture2D(uTexture, vUv);\n      }\n    `);\n\n    const clearShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float value;\n\n      void main () {\n          gl_FragColor = value * texture2D(uTexture, vUv);\n      }\n   `);\n\n    const displayShaderSource = `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    `;\n\n    const splatShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uTarget;\n      uniform float aspectRatio;\n      uniform vec3 color;\n      uniform vec2 point;\n      uniform float radius;\n\n      void main () {\n          vec2 p = vUv - point.xy;\n          p.x *= aspectRatio;\n          vec3 splat = exp(-dot(p, p) / radius) * color;\n          vec3 base = texture2D(uTarget, vUv).xyz;\n          gl_FragColor = vec4(base + splat, 1.0);\n      }\n    `);\n\n    const advectionShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uSource;\n      uniform vec2 texelSize;\n      uniform vec2 dyeTexelSize;\n      uniform float dt;\n      uniform float dissipation;\n\n      vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n          vec2 st = uv / tsize - 0.5;\n          vec2 iuv = floor(st);\n          vec2 fuv = fract(st);\n\n          vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n          vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n          vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n          vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n          return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n      }\n\n      void main () {\n          #ifdef MANUAL_FILTERING\n              vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n              vec4 result = bilerp(uSource, coord, dyeTexelSize);\n          #else\n              vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n              vec4 result = texture2D(uSource, coord);\n          #endif\n          float decay = 1.0 + dissipation * dt;\n          gl_FragColor = result / decay;\n      }\n    `, ext.supportLinearFiltering ? null : [\"MANUAL_FILTERING\"]);\n\n    const divergenceShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).x;\n          float R = texture2D(uVelocity, vR).x;\n          float T = texture2D(uVelocity, vT).y;\n          float B = texture2D(uVelocity, vB).y;\n\n          vec2 C = texture2D(uVelocity, vUv).xy;\n          if (vL.x < 0.0) { L = -C.x; }\n          if (vR.x > 1.0) { R = -C.x; }\n          if (vT.y > 1.0) { T = -C.y; }\n          if (vB.y < 0.0) { B = -C.y; }\n\n          float div = 0.5 * (R - L + T - B);\n          gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n      }\n    `);\n\n    const curlShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).y;\n          float R = texture2D(uVelocity, vR).y;\n          float T = texture2D(uVelocity, vT).x;\n          float B = texture2D(uVelocity, vB).x;\n          float vorticity = R - L - T + B;\n          gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n      }\n    `);\n\n    const vorticityShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uCurl;\n      uniform float curl;\n      uniform float dt;\n\n      void main () {\n          float L = texture2D(uCurl, vL).x;\n          float R = texture2D(uCurl, vR).x;\n          float T = texture2D(uCurl, vT).x;\n          float B = texture2D(uCurl, vB).x;\n          float C = texture2D(uCurl, vUv).x;\n\n          vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n          force /= length(force) + 0.0001;\n          force *= curl * C;\n          force.y *= -1.0;\n\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity += force * dt;\n          velocity = min(max(velocity, -1000.0), 1000.0);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n    `);\n\n    const pressureShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uDivergence;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          float C = texture2D(uPressure, vUv).x;\n          float divergence = texture2D(uDivergence, vUv).x;\n          float pressure = (L + R + B + T - divergence) * 0.25;\n          gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n      }\n    `);\n\n    const gradientSubtractShader = compileShader(gl.FRAGMENT_SHADER, `\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity.xy -= vec2(R - L, T - B);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n    `);\n\n    const blit = (() => {\n      gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n      gl.bufferData(\n        gl.ARRAY_BUFFER,\n        new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]),\n        gl.STATIC_DRAW\n      );\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n      gl.bufferData(\n        gl.ELEMENT_ARRAY_BUFFER,\n        new Uint16Array([0, 1, 2, 0, 2, 3]),\n        gl.STATIC_DRAW\n      );\n      gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n      gl.enableVertexAttribArray(0);\n      return (target, clear = false) => {\n        if (target == null) {\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        } else {\n          gl.viewport(0, 0, target.width, target.height);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\n        }\n        if (clear) {\n          gl.clearColor(0.0, 0.0, 0.0, 1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n      };\n    })();\n\n    let dye, velocity, divergence, curl, pressure;\n\n    const copyProgram = new Program(baseVertexShader, copyShader);\n    const clearProgram = new Program(baseVertexShader, clearShader);\n    const splatProgram = new Program(baseVertexShader, splatShader);\n    const advectionProgram = new Program(baseVertexShader, advectionShader);\n    const divergenceProgram = new Program(baseVertexShader, divergenceShader);\n    const curlProgram = new Program(baseVertexShader, curlShader);\n    const vorticityProgram = new Program(baseVertexShader, vorticityShader);\n    const pressureProgram = new Program(baseVertexShader, pressureShader);\n    const gradienSubtractProgram = new Program(baseVertexShader, gradientSubtractShader);\n    const displayMaterial = new Material(baseVertexShader, displayShaderSource);\n\n    function initFramebuffers() {\n      let simRes = getResolution(config.SIM_RESOLUTION);\n      let dyeRes = getResolution(config.DYE_RESOLUTION);\n      const texType = ext.halfFloatTexType;\n      const rgba = ext.formatRGBA;\n      const rg = ext.formatRG;\n      const r = ext.formatR;\n      const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\n      gl.disable(gl.BLEND);\n\n      if (!dye)\n        dye = createDoubleFBO(\n          dyeRes.width,\n          dyeRes.height,\n          rgba.internalFormat,\n          rgba.format,\n          texType,\n          filtering\n        );\n      else\n        dye = resizeDoubleFBO(\n          dye,\n          dyeRes.width,\n          dyeRes.height,\n          rgba.internalFormat,\n          rgba.format,\n          texType,\n          filtering\n        );\n\n      if (!velocity)\n        velocity = createDoubleFBO(\n          simRes.width,\n          simRes.height,\n          rg.internalFormat,\n          rg.format,\n          texType,\n          filtering\n        );\n      else\n        velocity = resizeDoubleFBO(\n          velocity,\n          simRes.width,\n          simRes.height,\n          rg.internalFormat,\n          rg.format,\n          texType,\n          filtering\n        );\n\n      divergence = createFBO(\n        simRes.width,\n        simRes.height,\n        r.internalFormat,\n        r.format,\n        texType,\n        gl.NEAREST\n      );\n      curl = createFBO(\n        simRes.width,\n        simRes.height,\n        r.internalFormat,\n        r.format,\n        texType,\n        gl.NEAREST\n      );\n      pressure = createDoubleFBO(\n        simRes.width,\n        simRes.height,\n        r.internalFormat,\n        r.format,\n        texType,\n        gl.NEAREST\n      );\n    }\n\n    function createFBO(w, h, internalFormat, format, type, param) {\n      gl.activeTexture(gl.TEXTURE0);\n      let texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\n\n      let fbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n      gl.viewport(0, 0, w, h);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let texelSizeX = 1.0 / w;\n      let texelSizeY = 1.0 / h;\n      return {\n        texture,\n        fbo,\n        width: w,\n        height: h,\n        texelSizeX,\n        texelSizeY,\n        attach(id) {\n          gl.activeTexture(gl.TEXTURE0 + id);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          return id;\n        },\n      };\n    }\n\n    function createDoubleFBO(w, h, internalFormat, format, type, param) {\n      let fbo1 = createFBO(w, h, internalFormat, format, type, param);\n      let fbo2 = createFBO(w, h, internalFormat, format, type, param);\n      return {\n        width: w,\n        height: h,\n        texelSizeX: fbo1.texelSizeX,\n        texelSizeY: fbo1.texelSizeY,\n        get read() {\n          return fbo1;\n        },\n        set read(value) {\n          fbo1 = value;\n        },\n        get write() {\n          return fbo2;\n        },\n        set write(value) {\n          fbo2 = value;\n        },\n        swap() {\n          let temp = fbo1;\n          fbo1 = fbo2;\n          fbo2 = temp;\n        },\n      };\n    }\n\n    function resizeFBO(target, w, h, internalFormat, format, type, param) {\n      let newFBO = createFBO(w, h, internalFormat, format, type, param);\n      copyProgram.bind();\n      gl.uniform1i(copyProgram.uniforms.uTexture, target.attach(0));\n      blit(newFBO);\n      return newFBO;\n    }\n\n    function resizeDoubleFBO(\n      target,\n      w,\n      h,\n      internalFormat,\n      format,\n      type,\n      param\n    ) {\n      if (target.width === w && target.height === h) return target;\n      target.read = resizeFBO(target.read, w, h, internalFormat, format, type, param);\n      target.write = createFBO(w, h, internalFormat, format, type, param);\n      target.width = w;\n      target.height = h;\n      target.texelSizeX = 1.0 / w;\n      target.texelSizeY = 1.0 / h;\n      return target;\n    }\n\n    function updateKeywords() {\n      let displayKeywords = [];\n      if (config.SHADING) displayKeywords.push(\"SHADING\");\n      displayMaterial.setKeywords(displayKeywords);\n    }\n\n    updateKeywords();\n    initFramebuffers();\n    let lastUpdateTime = Date.now();\n    let colorUpdateTimer = 0.0;\n\n    function updateFrame() {\n      const dt = calcDeltaTime();\n      if (resizeCanvas()) initFramebuffers();\n      updateColors(dt);\n      applyInputs();\n      step(dt);\n      render(null);\n      requestAnimationFrame(updateFrame);\n    }\n\n    function calcDeltaTime() {\n      let now = Date.now();\n      let dt = (now - lastUpdateTime) / 1000;\n      dt = Math.min(dt, 0.016666);\n      lastUpdateTime = now;\n      return dt;\n    }\n\n    function resizeCanvas() {\n      let width = scaleByPixelRatio(canvas.clientWidth);\n      let height = scaleByPixelRatio(canvas.clientHeight);\n      if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n      }\n      return false;\n    }\n\n    function updateColors(dt) {\n      colorUpdateTimer += dt * config.COLOR_UPDATE_SPEED;\n      if (colorUpdateTimer >= 1) {\n        colorUpdateTimer = wrap(colorUpdateTimer, 0, 1);\n        pointers.forEach((p) => {\n          p.color = generateColor();\n        });\n      }\n    }\n\n    function applyInputs() {\n      pointers.forEach((p) => {\n        if (p.moved) {\n          p.moved = false;\n          splatPointer(p);\n        }\n      });\n    }\n\n    function step(dt) {\n      gl.disable(gl.BLEND);\n      // Curl\n      curlProgram.bind();\n      gl.uniform2f(curlProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n      gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read.attach(0));\n      blit(curl);\n\n      // Vorticity\n      vorticityProgram.bind();\n      gl.uniform2f(\n        vorticityProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(vorticityProgram.uniforms.uVelocity, velocity.read.attach(0));\n      gl.uniform1i(vorticityProgram.uniforms.uCurl, curl.attach(1));\n      gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\n      gl.uniform1f(vorticityProgram.uniforms.dt, dt);\n      blit(velocity.write);\n      velocity.swap();\n\n      // Divergence\n      divergenceProgram.bind();\n      gl.uniform2f(\n        divergenceProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(divergenceProgram.uniforms.uVelocity, velocity.read.attach(0));\n      blit(divergence);\n\n      // Clear pressure\n      clearProgram.bind();\n      gl.uniform1i(clearProgram.uniforms.uTexture, pressure.read.attach(0));\n      gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE);\n      blit(pressure.write);\n      pressure.swap();\n\n      // Pressure\n      pressureProgram.bind();\n      gl.uniform2f(\n        pressureProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(pressureProgram.uniforms.uDivergence, divergence.attach(0));\n      for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\n        gl.uniform1i(pressureProgram.uniforms.uPressure, pressure.read.attach(1));\n        blit(pressure.write);\n        pressure.swap();\n      }\n\n      // Gradient Subtract\n      gradienSubtractProgram.bind();\n      gl.uniform2f(\n        gradienSubtractProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      gl.uniform1i(gradienSubtractProgram.uniforms.uPressure, pressure.read.attach(0));\n      gl.uniform1i(gradienSubtractProgram.uniforms.uVelocity, velocity.read.attach(1));\n      blit(velocity.write);\n      velocity.swap();\n\n      // Advection\n      advectionProgram.bind();\n      gl.uniform2f(\n        advectionProgram.uniforms.texelSize,\n        velocity.texelSizeX,\n        velocity.texelSizeY\n      );\n      if (!ext.supportLinearFiltering)\n        gl.uniform2f(\n          advectionProgram.uniforms.dyeTexelSize,\n          velocity.texelSizeX,\n          velocity.texelSizeY\n        );\n      let velocityId = velocity.read.attach(0);\n      gl.uniform1i(advectionProgram.uniforms.uVelocity, velocityId);\n      gl.uniform1i(advectionProgram.uniforms.uSource, velocityId);\n      gl.uniform1f(advectionProgram.uniforms.dt, dt);\n      gl.uniform1f(advectionProgram.uniforms.dissipation, config.VELOCITY_DISSIPATION);\n      blit(velocity.write);\n      velocity.swap();\n\n      if (!ext.supportLinearFiltering)\n        gl.uniform2f(advectionProgram.uniforms.dyeTexelSize, dye.texelSizeX, dye.texelSizeY);\n      gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read.attach(0));\n      gl.uniform1i(advectionProgram.uniforms.uSource, dye.read.attach(1));\n      gl.uniform1f(advectionProgram.uniforms.dissipation, config.DENSITY_DISSIPATION);\n      blit(dye.write);\n      dye.swap();\n    }\n\n    function render(target) {\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.enable(gl.BLEND);\n      drawDisplay(target);\n    }\n\n    function drawDisplay(target) {\n      let width = target == null ? gl.drawingBufferWidth : target.width;\n      let height = target == null ? gl.drawingBufferHeight : target.height;\n      displayMaterial.bind();\n      if (config.SHADING)\n        gl.uniform2f(displayMaterial.uniforms.texelSize, 1.0 / width, 1.0 / height);\n      gl.uniform1i(displayMaterial.uniforms.uTexture, dye.read.attach(0));\n      blit(target);\n    }\n\n    function splatPointer(pointer) {\n      let dx = pointer.deltaX * config.SPLAT_FORCE;\n      let dy = pointer.deltaY * config.SPLAT_FORCE;\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, pointer.color);\n    }\n\n    function clickSplat(pointer) {\n      const color = generateColor();\n      color.r *= 10.0;\n      color.g *= 10.0;\n      color.b *= 10.0;\n      let dx = 10 * (Math.random() - 0.5);\n      let dy = 30 * (Math.random() - 0.5);\n      splat(pointer.texcoordX, pointer.texcoordY, dx, dy, color);\n    }\n\n    function splat(x, y, dx, dy, color) {\n      splatProgram.bind();\n      gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read.attach(0));\n      gl.uniform1f(splatProgram.uniforms.aspectRatio, canvas.width / canvas.height);\n      gl.uniform2f(splatProgram.uniforms.point, x, y);\n      gl.uniform3f(splatProgram.uniforms.color, dx, dy, 0.0);\n      gl.uniform1f(splatProgram.uniforms.radius, correctRadius(config.SPLAT_RADIUS / 100.0));\n      blit(velocity.write);\n      velocity.swap();\n\n      gl.uniform1i(splatProgram.uniforms.uTarget, dye.read.attach(0));\n      gl.uniform3f(splatProgram.uniforms.color, color.r, color.g, color.b);\n      blit(dye.write);\n      dye.swap();\n    }\n\n    function correctRadius(radius) {\n      let aspectRatio = canvas.width / canvas.height;\n      if (aspectRatio > 1) radius *= aspectRatio;\n      return radius;\n    }\n\n    function updatePointerDownData(pointer, id, posX, posY) {\n      pointer.id = id;\n      pointer.down = true;\n      pointer.moved = false;\n      pointer.texcoordX = posX / canvas.width;\n      pointer.texcoordY = 1.0 - posY / canvas.height;\n      pointer.prevTexcoordX = pointer.texcoordX;\n      pointer.prevTexcoordY = pointer.texcoordY;\n      pointer.deltaX = 0;\n      pointer.deltaY = 0;\n      pointer.color = generateColor();\n    }\n\n    function updatePointerMoveData(pointer, posX, posY, color) {\n      pointer.prevTexcoordX = pointer.texcoordX;\n      pointer.prevTexcoordY = pointer.texcoordY;\n      pointer.texcoordX = posX / canvas.width;\n      pointer.texcoordY = 1.0 - posY / canvas.height;\n      pointer.deltaX = correctDeltaX(pointer.texcoordX - pointer.prevTexcoordX);\n      pointer.deltaY = correctDeltaY(pointer.texcoordY - pointer.prevTexcoordY);\n      pointer.moved =\n        Math.abs(pointer.deltaX) > 0 || Math.abs(pointer.deltaY) > 0;\n      pointer.color = color;\n    }\n\n    function updatePointerUpData(pointer) {\n      pointer.down = false;\n    }\n\n    function correctDeltaX(delta) {\n      let aspectRatio = canvas.width / canvas.height;\n      if (aspectRatio < 1) delta *= aspectRatio;\n      return delta;\n    }\n\n    function correctDeltaY(delta) {\n      let aspectRatio = canvas.width / canvas.height;\n      if (aspectRatio > 1) delta /= aspectRatio;\n      return delta;\n    }\n\n    function generateColor() {\n      let c = HSVtoRGB(Math.random(), 1.0, 1.0);\n      c.r *= 0.15;\n      c.g *= 0.15;\n      c.b *= 0.15;\n      return c;\n    }\n\n    function HSVtoRGB(h, s, v) {\n      let r, g, b, i, f, p, q, t;\n      i = Math.floor(h * 6);\n      f = h * 6 - i;\n      p = v * (1 - s);\n      q = v * (1 - f * s);\n      t = v * (1 - (1 - f) * s);\n      switch (i % 6) {\n        case 0:\n          r = v;\n          g = t;\n          b = p;\n          break;\n        case 1:\n          r = q;\n          g = v;\n          b = p;\n          break;\n        case 2:\n          r = p;\n          g = v;\n          b = t;\n          break;\n        case 3:\n          r = p;\n          g = q;\n          b = v;\n          break;\n        case 4:\n          r = t;\n          g = p;\n          b = v;\n          break;\n        case 5:\n          r = v;\n          g = p;\n          b = q;\n          break;\n        default:\n          break;\n      }\n      return { r, g, b };\n    }\n\n    function wrap(value, min, max) {\n      const range = max - min;\n      if (range === 0) return min;\n      return ((value - min) % range) + min;\n    }\n\n    function getResolution(resolution) {\n      let aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\n      if (aspectRatio < 1) aspectRatio = 1.0 / aspectRatio;\n      const min = Math.round(resolution);\n      const max = Math.round(resolution * aspectRatio);\n      if (gl.drawingBufferWidth > gl.drawingBufferHeight)\n        return { width: max, height: min };\n      else return { width: min, height: max };\n    }\n\n    function scaleByPixelRatio(input) {\n      const pixelRatio = window.devicePixelRatio || 1;\n      return Math.floor(input * pixelRatio);\n    }\n\n    function hashCode(s) {\n      if (s.length === 0) return 0;\n      let hash = 0;\n      for (let i = 0; i < s.length; i++) {\n        hash = (hash << 5) - hash + s.charCodeAt(i);\n        hash |= 0;\n      }\n      return hash;\n    }\n\n    window.addEventListener(\"mousedown\", (e) => {\n      let pointer = pointers[0];\n      let posX = scaleByPixelRatio(e.clientX);\n      let posY = scaleByPixelRatio(e.clientY);\n      updatePointerDownData(pointer, -1, posX, posY);\n      clickSplat(pointer);\n    });\n\n    document.body.addEventListener(\"mousemove\", function handleFirstMouseMove(e) {\n      let pointer = pointers[0];\n      let posX = scaleByPixelRatio(e.clientX);\n      let posY = scaleByPixelRatio(e.clientY);\n      let color = generateColor();\n      updateFrame(); // start animation loop\n      updatePointerMoveData(pointer, posX, posY, color);\n      document.body.removeEventListener(\"mousemove\", handleFirstMouseMove);\n    });\n\n    window.addEventListener(\"mousemove\", (e) => {\n      let pointer = pointers[0];\n      let posX = scaleByPixelRatio(e.clientX);\n      let posY = scaleByPixelRatio(e.clientY);\n      let color = pointer.color;\n      updatePointerMoveData(pointer, posX, posY, color);\n    });\n\n    document.body.addEventListener(\"touchstart\", function handleFirstTouchStart(e) {\n      const touches = e.targetTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        let posX = scaleByPixelRatio(touches[i].clientX);\n        let posY = scaleByPixelRatio(touches[i].clientY);\n        updateFrame(); // start animation loop\n        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\n      }\n      document.body.removeEventListener(\"touchstart\", handleFirstTouchStart);\n    });\n\n    window.addEventListener(\"touchstart\", (e) => {\n      const touches = e.targetTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        let posX = scaleByPixelRatio(touches[i].clientX);\n        let posY = scaleByPixelRatio(touches[i].clientY);\n        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\n      }\n    });\n\n    window.addEventListener(\"touchmove\", (e) => {\n      const touches = e.targetTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        let posX = scaleByPixelRatio(touches[i].clientX);\n        let posY = scaleByPixelRatio(touches[i].clientY);\n        updatePointerMoveData(pointer, posX, posY, pointer.color);\n      }\n    }, false);\n\n    window.addEventListener(\"touchend\", (e) => {\n      const touches = e.changedTouches;\n      let pointer = pointers[0];\n      for (let i = 0; i < touches.length; i++) {\n        updatePointerUpData(pointer);\n      }\n    });\n\n    updateFrame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    SIM_RESOLUTION,\n    DYE_RESOLUTION,\n    CAPTURE_RESOLUTION,\n    DENSITY_DISSIPATION,\n    VELOCITY_DISSIPATION,\n    PRESSURE,\n    PRESSURE_ITERATIONS,\n    CURL,\n    SPLAT_RADIUS,\n    SPLAT_FORCE,\n    SHADING,\n    COLOR_UPDATE_SPEED,\n    BACK_COLOR,\n    TRANSPARENT,\n  ]);\n\n  return (\n    <div className=\"fixed top-0 left-0 z-50 pointer-events-none\">\n      <canvas ref={canvasRef} id=\"fluid\" className=\"w-screen h-screen\" />\n    </div>\n  );\n}\n\nexport { SplashCursor };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnavagarwal/Desktop/githubprkmit/src/app/contact/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { ParticleButton } from '@/components/ui/particle-button';\nimport ImageBackground from '@/components/background';\nimport { SplashCursor } from '@/components/ui/splash-cursor';\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [isTyping, setIsTyping] = useState(false);\n  const typingTimeoutRef = useRef(null);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Set typing state to true when user starts typing\n    setIsTyping(true);\n    \n    // Clear any existing timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    \n    // Set a timeout to turn off typing state after user stops typing for 1 second\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n    }, 1000);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Store message in localStorage\n    const newMessage = {\n      ...formData,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Get existing messages or initialize empty array\n    const existingMessages = JSON.parse(localStorage.getItem('contactMessages') || '[]');\n    \n    // Add new message to array\n    existingMessages.push(newMessage);\n    \n    // Save back to localStorage\n    localStorage.setItem('contactMessages', JSON.stringify(existingMessages));\n    \n    // Reset form after submission\n    setFormData({ name: '', email: '', message: '' });\n    alert('Thank you for your message! We will get back to you soon.');\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <main style={styles.main}>\n      {!isTyping && (\n        <SplashCursor \n          BACK_COLOR={{ r: 0, g: 0, b: 0 }}\n          SPLAT_FORCE={8000}\n          COLOR_UPDATE_SPEED={15}\n          style={{ pointerEvents: 'none' }}\n        />\n      )}\n\n      {/* Moving Background */}\n      <ImageBackground />\n\n      {/* Contact Form */}\n      <div style={styles.content} className=\"flex justify-center items-center\">\n        <div className=\"bg-black/70 p-8 rounded-lg shadow-xl w-full max-w-md\">\n          <h1 className=\"text-4xl font-mono text-white mb-6 text-center\">Contact Us</h1>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-white mb-2\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                required\n                className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 focus:border-blue-500 focus:outline-none\"\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"email\" className=\"block text-white mb-2\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n                className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 focus:border-blue-500 focus:outline-none\"\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"message\" className=\"block text-white mb-2\">Message</label>\n              <textarea\n                id=\"message\"\n                name=\"message\"\n                value={formData.message}\n                onChange={handleChange}\n                required\n                rows=\"4\"\n                className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 focus:border-blue-500 focus:outline-none\"\n              ></textarea>\n            </div>\n            \n            <div className=\"flex justify-center mt-6\">\n              <ParticleButton type=\"submit\">\n                Send Message\n              </ParticleButton>\n            </div>\n          </form>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nconst styles = {\n  main: {\n    position: 'relative',\n    width: '100vw',\n    height: '100vh',\n    overflow: 'auto',\n    scrollBehavior: 'smooth',\n  },\n  content: {\n    zIndex: 10,\n    position: 'relative',\n    height: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px',\n    pointerEvents: 'auto',\n  },\n};"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,MAAM;QACN,OAAO;QACP,SAAS;IACX;IACA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEhC,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACV,CAAC;QAED,mDAAmD;QACnD,YAAY;QAEZ,6BAA6B;QAC7B,IAAI,iBAAiB,OAAO,EAAE;YAC5B,aAAa,iBAAiB,OAAO;QACvC;QAEA,8EAA8E;QAC9E,iBAAiB,OAAO,GAAG,WAAW;YACpC,YAAY;QACd,GAAG;IACL;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,gCAAgC;QAChC,MAAM,aAAa;YACjB,GAAG,QAAQ;YACX,WAAW,IAAI,OAAO,WAAW;QACnC;QAEA,kDAAkD;QAClD,MAAM,mBAAmB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,sBAAsB;QAE/E,2BAA2B;QAC3B,iBAAiB,IAAI,CAAC;QAEtB,4BAA4B;QAC5B,aAAa,OAAO,CAAC,mBAAmB,KAAK,SAAS,CAAC;QAEvD,8BAA8B;QAC9B,YAAY;YAAE,MAAM;YAAI,OAAO;YAAI,SAAS;QAAG;QAC/C,MAAM;IACR;IAEA,6BAA6B;IAC7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,OAAO;YACL,IAAI,iBAAiB,OAAO,EAAE;gBAC5B,aAAa,iBAAiB,OAAO;YACvC;QACF;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAK,OAAO,OAAO,IAAI;;YACrB,CAAC,0BACA,8OAAC,4IAAA,CAAA,eAAY;gBACX,YAAY;oBAAE,GAAG;oBAAG,GAAG;oBAAG,GAAG;gBAAE;gBAC/B,aAAa;gBACb,oBAAoB;gBACpB,OAAO;oBAAE,eAAe;gBAAO;;;;;;0BAKnC,8OAAC,+HAAA,CAAA,UAAe;;;;;0BAGhB,8OAAC;gBAAI,OAAO,OAAO,OAAO;gBAAE,WAAU;0BACpC,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAiD;;;;;;sCAE/D,8OAAC;4BAAK,UAAU;4BAAc,WAAU;;8CACtC,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAO,WAAU;sDAAwB;;;;;;sDACxD,8OAAC;4CACC,MAAK;4CACL,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,IAAI;4CACpB,UAAU;4CACV,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAId,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAQ,WAAU;sDAAwB;;;;;;sDACzD,8OAAC;4CACC,MAAK;4CACL,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,KAAK;4CACrB,UAAU;4CACV,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAId,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAU,WAAU;sDAAwB;;;;;;sDAC3D,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,OAAO;4CACvB,UAAU;4CACV,QAAQ;4CACR,MAAK;4CACL,WAAU;;;;;;;;;;;;8CAId,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,8IAAA,CAAA,iBAAc;wCAAC,MAAK;kDAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS5C;AAEA,MAAM,SAAS;IACb,MAAM;QACJ,UAAU;QACV,OAAO;QACP,QAAQ;QACR,UAAU;QACV,gBAAgB;IAClB;IACA,SAAS;QACP,QAAQ;QACR,UAAU;QACV,QAAQ;QACR,SAAS;QACT,YAAY;QACZ,gBAAgB;QAChB,SAAS;QACT,eAAe;IACjB;AACF"}},
    {"offset": {"line": 1521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}